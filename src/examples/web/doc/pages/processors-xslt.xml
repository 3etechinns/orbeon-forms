<!--
    Copyright (C) 2004 Orbeon, Inc.

    The Orbeon documentation is not distributed under the LGPL license. Use of the documentation is
    subject to the following terms:

    * Conversion to other formats is allowed, but the actual content may not be altered or edited
      in any way.

    * You may create printed copies for your own personal use.

    * For all other uses, such as selling printed copies or using (parts of) the manual in another
      publication, prior written agreement from Orbeon, Inc. is required.

    Please contact Orbeon at info@orbeon.com for more information.
-->
<document xmlns:p="http://www.orbeon.com/oxf/pipeline" xmlns:xforms="http://www.w3.org/2002/xforms">
    <header>
        <title>XSLT and TrAX Processors</title>
    </header>
    <body>
        <section>
            <title>Introduction</title>

            <p>
                <link href="http://www.w3.org/TR/xslt">XSLT</link> is a language
                for transforming XML documents into other XML documents. Presentation Server uses
                XSLT extensively as its main language to process XML
                documents.
            </p>

            <p>Presentation Server ships with multiple implementations of XSLT:</p>
            <ul>
                <li>Xalan 2.5.1 Interpreter</li>
                <li>Xalan 2.5.1 Compiler (XSLTC)</li>
                <li>Saxon 6.5.2 </li>
                <li>Saxon 7.9.1 (supporting a large subset of XSLT 2.0)</li>
            </ul>

            <p>Additionally, Presentation Server can use any JAXP (TrAX) compliant transformer.</p>
        </section>
        <section>
            <title>Usage</title>

            <p>
                Instantiate the XSLT Processor with a
                <code>p:processor</code> declaration. The following URIs are supported:
            </p>


            <p>
                <table>
                    <tr>
                        <th>Processor URI</th>
                        <th>XSLT Implementation</th>
                    </tr>
                    <tr>
                        <td>oxf:xslt</td>
                        <td>Saxon 7.9.1</td>
                    </tr>
                    <tr>
                        <td>oxf:xalan</td>
                        <td>Xalan 2.5.1 Interpreter</td>
                    </tr>
                    <tr>
                        <td>oxf:xsltc</td>
                        <td>Xalan 2.5.1 Compiler</td>
                    </tr>
                    <tr>
                        <td>oxf:saxon</td>
                        <td>Saxon 6.5.2</td>
                    </tr>
                    <tr>
                        <td>oxf:saxon7</td>
                        <td>Saxon 7.9.1</td>
                    </tr>
                    <tr>
                        <td>oxf:generic-xslt-1.0</td>
                        <td>Any TrAX XSLT 1.0 transformer</td>
                    </tr>
                    <tr>
                        <td>oxf:generic-xslt-2.0</td>
                        <td>Any TrAX XSLT 2.0 transformer</td>
                    </tr>
                    <tr>
                        <td>oxf:xslt-1.0</td>
                        <td>Default TrAX XSLT 1.0 transformer (currently Xalan)</td>
                    </tr>
                    <tr>
                        <td>oxf:xslt-2.0</td>
                        <td>Default TrAX XSLT 2.0 transformer (currently Saxon 7)</td>
                    </tr>
                    <tr>
                        <td>oxf:trax</td>
                        <td>Any TrAX transformer</td>
                    </tr>
                </table>
            </p>


            <p>
                <table ca="|p{0.2\textwidth}|p{0.4\textwidth}|">
                    <tr>
                        <th>transformer input</th>
                        <td>
                            An input containing a specific concrete <link
                            href="http://java.sun.com/j2se/1.4.2/docs/api/javax/xml/transform/TransformerFactory.html">
                            <code>TransformerFactory</code></link> class.
                        </td>
                    </tr>
                    <tr>
                        <th>config input</th>
                        <td>The stylesheet</td>
                    </tr>
                    <tr>
                        <th>data input</th>
                        <td>The document to which the stylesheet is applied</td>
                    </tr>
                    <tr>
                        <th>data output</th>
                        <td>The result of the transformation</td>
                    </tr>
                </table>
            </p>

            <section>
                <title>Transformer Input</title>
                <p>
                    The
                    <code>transformer</code> is mandatory only when using
                    the
                    <code>oxf:generic-xslt-1.0</code>,
                    <code>oxf:generic-xslt-2.0</code> or the
                    <code>oxf:trax</code> processor URI. It is implied
                    otherwise.
                </p>

                <p>
                    This input points to a specific concrete subclass of
                    <link
                        href="http://java.sun.com/j2se/1.4.2/docs/api/javax/xml/transform/TransformerFactory.html">
                        <code>TransformerFactory</code>
                    </link>. For example, you can use the TrAX transformer
                    to interface Presentation Server with a new hypothetical transformer (MyTrans):


                    <xml-source>
                        <p:processor uri="oxf/transformer/trax">
                            <p:input name="transformer">
                                <config>
                                    <class>com.mytrans.TransformerFactoryImpl</class>
                                </config>
                            </p:input>
                            <p:input name="config">
                                <mytrans>
                                    ...
                                </mytrans>
                            </p:input>
                            <p:input name="data">
                                <document>
                                    ...
                                </document>
                            </p:input>
                            <p:output name="data" id="mytrans"/>
                        </p:processor>
                    </xml-source>

                </p>

            </section>

            <section>
                <title>Config Input</title>
                <p> The configuration input contains a stylesheet.  The
                    following example shows a simple XSLT stylesheet:
                </p>
                <xml-source>
                    <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                        <xsl:template match="/">
                            <new-root>
                                <xsl:value-of select="/root/a"/>
                                <xsl:value-of select="/root/b"/>
                            </new-root>
                        </xsl:template>
                    </xsl:stylesheet>
                </xml-source>
            </section>
            <section>
                <title>Data Input</title>
                <p> The data input contains the XML source document. The example
                    below works with the stylesheet shown above:</p>
                <xml-source>
                    <root>
                        <a>a</a>
                        <b>b</b>
                    </root>
                </xml-source>
            </section>
            <section>
                <title>Data Output</title>
                <p> The data output contains the transformation result. The following
                    XML is the result of the above transformation:</p>
                <xml-source>
                    <new-root>ab</new-root>
                </xml-source>
            </section>
        </section>
        <section>
            <title>Streaming Transformations for XML (STX)</title>

            <p>
                <link href="http://stx.sourceforge.net/">Streaming
                    Transformations for XML (STX)</link> is a one-pass transformation
                language for XML documents that builds on the Simple API for XML (SAX). STX is
                intended as a high-speed, low memory consumption alternative to XSLT. Since it does
                not require the construction of an in-memory tree, it is suitable for use in
                resource constrained scenarios.
            </p>

            <p>
                Presentation Server uses <link href="http://joost.sourceforge.net/">Joost</link> to
                implement a STX transformer. Its usage is similar to an XSLT transformer, using the
                processor URI <code>oxf:stx</code>. This <link href="../examples/stx">example</link>
                demonstrates a simple STX transformation.
            </p>

            <xml-source>
                <p:processor name="oxf:stx">
                    <!-- This example comes straight from the Joost distribution -->
                    <p:input name="data" href="#source"/>
                    <p:input name="config">
                        <stx:transform xmlns:stx="http://stx.sourceforge.net/2002/ns" version="1.0"
                            pass-through="all" strip-space="yes">
                        </stx:transform>
                    </p:input>
                    <p:input name="data" href="#document"/>
                    <p:output name="data" id="result"/>
                </p:processor>
            </xml-source>

        </section>
    </body>
</document>
