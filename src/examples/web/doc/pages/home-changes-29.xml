<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Copyright (C) 2004 Orbeon, Inc.

    The Orbeon documentation is not distributed under the LGPL license. Use of the documentation is
    subject to the following terms:

    * Conversion to other formats is allowed, but the actual content may not be altered or edited
      in any way.

    * You may create printed copies for your own personal use.

    * For all other uses, such as selling printed copies or using (parts of) the manual in another
      publication, prior written agreement from Orbeon, Inc. is required.

    Please contact Orbeon at info@orbeon.com for more information.
-->
<document xmlns:p="http://www.orbeon.com/oxf/pipeline" xmlns:xforms="http://www.w3.org/2002/xforms"
        xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
        xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <header>
        <title>Changes in Version 2.9</title>
    </header>
    <body>
        <section>
            <title>XForms</title>
            <p>
                ...
            </p>
            <ul>
                <li>
                    <p>
                        XForms event model...
                    </p>
                </li>
                <li>
                    <p>
                        Support for multiple XForms models and instances...
                    </p>
                </li>
                <li>
                    <p>
                        Ajax-style XForms engine...
                    </p>
                </li>
                <li>
                    <p>
                        <code>xxforms:call-xpl()</code> and XForms <code>instance()</code> functions...
                    </p>
                </li>
            </ul>
            <p>
                Incompatible changes:
            </p>
            <ul>
                <li>
                    <p>
                        XSLT views now must always use <code>doc('input:instance')</code> to access
                        the XForms instance instead of expecting the instance on their main input.
                    </p>
                </li>
                <li>
                    <p>
                        
                    </p>
                </li>
            </ul>
        </section>
        <section>
            <title>Page Flow</title>
            <p>
                ...
            </p>
            <ul>
                <li>
                    <p>
                        Using XForms no longer implies having an <code>xforms</code> attribute on
                        the <code>page</code> element.
                    </p>
                </li>
                <li>
                    <p>
                        Clarification: if a page uses XForms, which means having action elements,
                        reading the instance in the page model or page view, it must not expect to
                        be able to read the HTTP request body.
                    </p>
                </li>
            </ul>
        </section>
        <section>
            <title>XSLT processor</title>
            <ul>
                <li>
                    <p>
                        The <a href="/doc/processors-xslt">XSLT processor</a> supports a new
                        <code>attributes</code> input, which allows setting JAXP TransformerFactory
                        attributes.
                    </p>
                </li>
                <li>
                    <p>
                        The default <a href="/doc/processors-xslt">XSLT processor</a> (accessed with
                        <code>oxf:xslt</code>, and configured in <code>processors.xml</code>) no
                        longer allows executing external functions. To enable external functions,
                        use <code>oxf:unsafe-xslt</code>, or configure the XSLT processor's
                        <code>attributes</code> input. This makes the XSLT processor safer by
                        default.
                    </p>
                </li>
                <li>
                    <p>
                        The default XSLT 1.0 processor implementation, configured in
                        <code>processors.xml</code>, is now Saxon 8 instead of Xalan. The default
                        XSLT 2.0 implementation remains Saxon 8, as was the case before.
                    </p>
                </li>
                <li>
                    <p>
                        The <a href="/doc/processors-xslt">XSLT processor</a> used to support a
                        value of <code>DEFAULT</code> or <code>interpreter</code> for the
                        <code>transformer</code> input, for backward compatibility. This is no
                        longer supported. The <code>transformer</code> must provide only a valid
                        JAXP TransformerFactory class name.
                    </p>
                </li>
            </ul>
            <p>
                These changes should not affect applications that used <code>oxf:xslt</code> unless
                stylesheets use external functions. In this case, you have to use
                <code>oxf:unsafe-xslt</code> instead.
            </p>
            <p>
                If you were using <code>oxf:xslt-1.0</code> or were using XSLT 1.0 stylesheets
                directly referenced from a page flow, and used Xalan-specific features, you have to
                either convert your stylesheet to use Saxon features instead, or use
                <code>oxf:xalan</code>.
            </p>
        </section>
        <section>
            <title>XQuery processor</title>
            <ul>
                <li>
                    <p>
                        The default implementation of the XQuery processor is now Saxon 8.
                   </p>
                </li>
                <li>
                    <p>
                        This processor is available with <code>oxf:xquery</code> or
                        <code>oxf:unsafe-xquery</code>. The former does not allow calling external
                        functions by default, while the latter does, similar to the new behavior of
                        the XSLT processor.
                    </p>
                </li>
                <li>
                    <p>
                        In addition to XQuery code embedded into XML, the XQuery processor now
                        supports on its <code>config</code> input a <a
                        href="reference-formats#text-documents">text document</a> of the form:
                    </p>
                    <xml-source>
                        <document xsi:type="xs:string" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                            xquery version "1.0";
                            ...
                        </document>
                    </xml-source>
                </li>
            </ul>
        </section>
        <section>
            <title>XHTML Support</title>
            <p>
                XHTML is better supported:
            </p>
            <ul>
                <li>
                    <p>
                        There is no need to remove the XHTML namespace in XSLT, as was done before
                        in <code>theme.xsl</code>.
                    </p>
                </li>
                <li>
                    <p>
                        The epilogue illustrates the generation of XHTML and HTML to different
                        browsers.
                    </p>
                </li>
            </ul>
        </section>
    </body>
</document>
