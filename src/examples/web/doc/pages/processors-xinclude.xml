<!--
    Copyright (C) 2004 Orbeon, Inc.

    The Orbeon documentation is not distributed under the LGPL license. Use of the documentation is
    subject to the following terms:

    * Conversion to other formats is allowed, but the actual content may not be altered or edited
      in any way.

    * You may create printed copies for your own personal use.

    * For all other uses, such as selling printed copies or using (parts of) the manual in another
      publication, prior written agreement from Orbeon, Inc. is required.

    Please contact Orbeon at info@orbeon.com for more information.
-->
<document xmlns:p="http://www.orbeon.com/oxf/pipeline"
          xmlns:xforms="http://www.w3.org/2002/xforms"
          xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
    <header>
        <title>XInclude Processor</title>
    </header>
    <body>
        <section>
            <title>Introduction</title>
            <p>
                <link href="http://www.w3.org/TR/xinclude/">XInclude 1.0</link> is a simple
                language for XML inclusions. It's main use is to specify that content from a target
                XML document must be included at a certain place within a source XML document.
            </p>
            <p>
                There are two ways to use XInclude in OPS:
            </p>
            <ul>
                <li>
                    <p><b>At parsing time.</b> The XML parser included with OPS is able to process
                    XInclude instructions when an XML file is being parsed (i.e. loaded) into
                    OPS.</p>
                </li>
                <li>
                    <p><b>With the XInclude processor.</b> The processor documented here allows to
                    explicitly control the use of XInclude instructions.</p>
                </li>
            </ul>
        </section>
        <section>
            <title>Inputs and Outputs</title>
            <table>
                <tr>
                    <th>Type</th>
                    <th>Name</th>
                    <th>Purpose</th>
                    <th>Mandatory</th>
                </tr>
                <tr>
                    <td align="center">Input</td>
                    <td><code>config</code></td>
                    <td>
                        XML document with XInclude elements.
                    </td>
                    <td align="center">Yes</td>
                </tr>
                <tr>
                    <td align="center">Input</td>
                    <td>User-defined inputs</td>
                    <td>
                        User-defined inputs accessible with URLs of the form
                        <code>input:custom-input</code>.
                    </td>
                    <td align="center">No</td>
                </tr>
                <tr>
                    <td align="center">Output</td>
                    <td><code>data</code></td>
                    <td>
                        The result of the transformation.
                    </td>
                    <td align="center">Yes</td>
                </tr>
            </table>
        </section>
        <section>
            <title>Usage</title>
            <section>
                <title>Config Input</title>
                <p>
                    The <code>config</code> input receives an XML document which may contain
                    XInclude elements. If it doesn't contain any XInclude elements, the content of
                    the document will be produced without modifications on the XInclude processor's
                    <code>data</code> output.
                </p>
                <p>
                    The main XInclude element is <code>xi:include</code>. The prefix, usually
                    <code>xi</code>, must be bound to the namespace
                    <code>http://www.w3.org/2001/XInclude</code>. <code>xi:include</code> takes a
                    mandatory <code>href</code> attribute, which must contain an URL such as an
                    <code>oxf:</code>, <code>file:</code> or <code>http:</code> URL. In addition,
                    URIs of the form <code>input:*</code> are supported, to allow access to
                    user-defined inputs connected to the XInclude processor.
                </p>
                <p>
                    This is a fragment of an XForms page using XInclude, in a resource named
                    <code>view.xhtml</code>:
                </p>
                <xml-source show-namespaces="false">
                    <xhtml:html xmlns:xforms="http://www.w3.org/2002/xforms"
                                xmlns:xhtml="http://www.w3.org/1999/xhtml"
                                xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
                                xmlns:xi="http://www.w3.org/2001/XInclude-doc">
                        <xhtml:head>
                            <xhtml:title>XForms Text Controls</xhtml:title>
                            <xforms:model id="main-model">
                                <xforms:instance id="instance">
                                    <comment> This is where the inclusion is performed </comment>
                                    <xi:include href="main-xforms-instance.xml"/>
                                </xforms:instance>
                            </xforms:model>
                        </xhtml:head>
                        ...
                    </xhtml:html>
                </xml-source>
                <p>
                    With the example above, the resource <code>main-xforms-instance.xml</code> can
                    contain:
                </p>
                <xml-source>
                    <instance>
                        <age>35</age>
                        <secret>42</secret>
                        <textarea>The world is but a canvas for the imagination.</textarea>
                        <label>Hello, World!</label>
                        <date>2004-01-07</date>
                        ...
                    </instance>
                </xml-source>
                <p>
                    The processor is configured as follows:
                </p>
                <xml-source>
                    <p:processor name="oxf:xinclude">
                        <p:input name="config" href="view.xhtml"/>
                        <p:output name="data" id="result"/>
                    </p:processor>
                </xml-source>
                <p>
                    The result of the inclusion on the <code>data</code> output is:
                </p>
                <xml-source>
                    <xhtml:html xmlns:xforms="http://www.w3.org/2002/xforms"
                                xmlns:xhtml="http://www.w3.org/1999/xhtml"
                                xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
                                xmlns:xi="http://www.w3.org/2001/XInclude-doc">
                        <xhtml:head>
                            <xhtml:title>XForms Text Controls</xhtml:title>
                            <xforms:model id="main-model">
                                <xforms:instance id="instance">
                                    <instance xml:base="oxf:/examples/xforms/xforms-controls/main-xforms-instance.xml">
                                        <age>35</age>
                                        <secret>42</secret>
                                        <textarea>The world is but a canvas for the imagination.</textarea>
                                        <label>Hello, World!</label>
                                        <date>2004-01-07</date>
                                        ...
                                    </instance>
                                </xforms:instance>
                            </xforms:model>
                        </xhtml:head>
                        ...
                    </xhtml:html>
                </xml-source>
                <p>
                    Notice how the <code>xi:include</code> element has been replaced with the entire
                    content of the included file. In addition, a new <code>xml:base</code> attribute
                    has been added, as per the XInclude specification. It specifies the base URI
                    that must be used to resolve relative URIs in the included document.
                </p>
                <p>
                    An included document may in turn use further <code>xi:include</code> elements to
                    perform nested inclusions.
                </p>
                <note>
                    The XInclude processor only supports <code>xi:include</code> with the
                    <code>href</code> attribute and an optional <code>parse</code> attribute set to
                    the constant <code>xml</code>. Other features of XInclude such as the
                    <code>xpointer</code>, <code>encoding</code>, <code>accept</code> or
                    <code>accept-language</code> attributes, and <code>xi:fallback</code> are not
                    supported. It is planned to enhance the XInclude processor over time to support
                    those features.
                </note>
            </section>
            <anchor id="user-defined"/>
            <section>
                <title>User-Defined Inputs</title>
                <p>
                    User-defined inputs allow the XInclude processor do include dynamically
                    generated XML documents. For example, connecting the XInclude processor as
                    follows:
                </p>
                <xml-source>
                    <p:processor name="oxf:xinclude">
                        <p:input name="config" href="view.xhtml"/>
                        <p:input name="my-dynamic-content" href="#some-dynamic-content"/>
                        <p:output name="data" id="result"/>
                    </p:processor>
                </xml-source>
                <p>
                    It is possible to include the XML document available on the custom
                    <code>my-dynamic-content</code> input by using <code>input:*</code> URIs, for
                    example with the following document as the <code>config</code> input:
                </p>
                <xml-source show-namespaces="false">
                    <xhtml:html xmlns:xforms="http://www.w3.org/2002/xforms"
                                xmlns:xhtml="http://www.w3.org/1999/xhtml"
                                xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
                                xmlns:xi="http://www.w3.org/2001/XInclude-doc">
                        <xhtml:head>
                            <xhtml:title>XForms Text Controls</xhtml:title>
                            <xforms:model id="main-model">
                                <xforms:instance id="instance">
                                    <comment> This is where the inclusion is performed </comment>
                                    <xi:include href="input:my-dynamic-content"/>
                                </xforms:instance>
                            </xforms:model>
                        </xhtml:head>
                        ...
                    </xhtml:html>
                </xml-source>
                <p>
                    This makes the XInclude processor very versatile as a simple template processor.
                </p>
            </section>
        </section>
    </body>
</document>
