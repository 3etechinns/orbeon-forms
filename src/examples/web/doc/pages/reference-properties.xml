<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
    Copyright (C) 2004 Orbeon, Inc.

    The Orbeon documentation is not distributed under the LGPL license. Use of the documentation is
    subject to the following terms:

    * Conversion to other formats is allowed, but the actual content may not be altered or edited
      in any way.

    * You may create printed copies for your own personal use.

    * For all other uses, such as selling printed copies or using (parts of) the manual in another
      publication, prior written agreement from Orbeon, Inc. is required.

    Please contact Orbeon at info@orbeon.com for more information.
-->
<document xmlns:p="http://www.orbeon.com/oxf/pipeline" xmlns:xforms="http://www.w3.org/2002/xforms">
    <header>
        <title>Presentation Server Properties</title>
    </header>
    <body>
        <section>
            <title>Overview</title>
            <ul>
                <li><p>
                    <b>Rationale</b> – The Presentation Server properties are used by some
                    processors to configure or customize their behavior. This section describes how
                    the system is configured, and lists all the customizable properties.
                </p></li>
                <li><p>
                    <b>Properties File Location</b> – The properties sub-system is initialized after
                    the <link href="reference-resource-managers">Resource Manager</link> (the
                    properties being read like any other Presentation Server resources). By default
                    it tries to load a file from the URL <code>oxf:/properties.xml</code>. This
                    value can be overridden in the Web application descriptor <code>web.xmxl</code>
                    with the <code>oxf.properties</code> initialization parameter:

                    <xml-source>
                        <context-param>
                            <param-name>oxf.properties</param-name>
                            <param-value>oxf:/config/properties.xml</param-value>
                        </context-param>
                    </xml-source>
                </p></li>
                <li><p>
                    <b>Automatic Reloading</b> – The property file is reloaded every time it is
                    changed, however some properties are taken into account only when the server is
                    first started.
                </p></li>
                <li><p>
                    <b>Property types</b> – Properties have a type, which must be one of the
                    following XML Schema simple types: <code>xs:anyURI</code>,
                    <code>xs:integer</code>, <code>xs:boolean</code>, <code>xs:QName</code>,
                    <code>xs:string</code>, <code>xs:date</code>, <code>xs:dateTime</code>.
                </p></li>
                <li><p>
                    <b>System and Processor Properties</b> – There are two types of properties:
                    system properties that apply to the system as a whole, and processor-specific
                    properties. For instance, you set the cache size with a global property:

                    <xml-source>
                        <property as="xs:integer" name="oxf.cache.size" value="200"/>
                    </xml-source>

                    While setting the maximum amount of byte that can be uploaded to the server is
                    set with a processor sepecific property. Note the addiitional
                    <code>processor-name</code> attribute:

                    <xml-source>
                        <property as="xs:integer" processor-name="oxf:request" name="max-upload-size"  value="100000000"/>
                    </xml-source>
                </p></li>
            </ul>
        </section>
        <section>
            <title>System Properties</title>
            <anchor id="log4j"/>
            <section>
                <title>oxf.log4j-config</title>
                <p>
                    <table ca="|l|p{0.5\textwidth}|">
                        <tr>
                            <th>Purpose</th>
                            <td>Configures the logging system</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td>
                                <code>xs:anyURI</code>
                            </td>
                        </tr>
                        <tr>
                            <th>Default Value</th>
                            <td>The logging system not initialized with a warning if this property
                            is not present.</td>
                        </tr>
                    </table>
                </p>
                <p>
                    Presentation Server uses the <fork
                    href="http://jakarta.apache.org/log4j/docs/index.html">Log4J</fork> logging
                    framework. Log4J is configured with an XML file conforming to the <link
                    href="log4j.dtd.html">Log4J DTD</link>. Here is a sample Log4J configuration:
                </p>
                <xml-source>
                    <log4j:configuration xmlns:log4j="log4j">
                        <appender name="ConsoleAppender" class="org.apache.log4j.ConsoleAppender">
                            <param name="Target" value="System.out"/>
                            <layout class="org.apache.log4j.PatternLayout">
                                <param name="ConversionPattern" value="%-4r [%t] %-5p %c %x - %m%n"/>
                            </layout>
                        </appender>
                        <catagory name="org.orbeon.oxf.processor.DebugProcessor">
                            <priority value="info"/>
                        </catagory>
                        <root>
                            <priority value="error"/>
                            <appender-ref ref="ConsoleAppender"/>
                        </root>
                    </log4j:configuration>
                </xml-source>
                <p>
                    If this property is not set, the Log4J initialization is skipped. This is
                    useful if another subsystem of your application has already initialized Log4J
                    prior to the loading of Presentation Server.
                </p>
            </section>

            <a name="cache-size"/>
            <section>
                <title>oxf.cache.size</title>
                <p>
                    <table ca="|l|p{0.5\textwidth}|">
                        <tr>
                            <th>Purpose</th>
                            <td>Setup the size of the Presentation Server cache</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td>
                                <code>xs:integer</code>
                            </td>
                        </tr>
                        <tr>
                            <th>Default Value</th>
                            <td>200</td>
                        </tr>
                    </table>
                </p>

                <p>
                    Presentation Server uses an efficient caching system. Presentation Server
                    automatically determines what can be cached and when to expire objects. The
                    cache has a default size of 200, meaning that it can hold 200 objects. This size
                    is reasonable for most applications. A bigger cache tends to make the
                    application faster, but it uses more memory. To tune the cache, start the Java
                    VM with the <code>-verbose:gc</code> option. Then with the application under
                    typical load, look at the server logs and monitor:
                </p>

                <ul>
                    <li>How often full garbage collections happen</li>
                    <li>The value of the "success rate" reported by Presentation Server after each page is generated</li>
                </ul>

                <p>
                    The "success rate" is the percentage of the objects needed to generate the pages
                    that were found in the cache. The closer this value is to 100%, the better. If
                    the success rate is too low (say below 70% with a mostly static site), then the
                    cache size should be increased. If full garbage collections happen too often,
                    then the VM heap size should be increased. On the other hand, if the success
                    rate is acceptable and garbage collections do not happen too often, you can
                    consider reducing the size of the cache and maybe even the heap size.
                </p>

                <p>
                    Tuning the VM heap size and cache size is not always needed and in most cases
                    the default values are acceptable.
                </p>
            </section>
            <section>
                <title>oxf.validation.processor</title>
                <p>
                    <table ca="|l|p{0.5\textwidth}|">
                        <tr>
                            <th>Purpose</th>
                            <td>Controls the automatic processor validation</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td>
                                <code>xs:boolean</code>
                            </td>
                        </tr>
                        <tr>
                            <th>Default Value</th>
                            <td>Enabled</td>
                        </tr>
                    </table>
                </p>
                <p>
                    Many processors validate their configuration input with a schema. This
                    validation is automatic and allows meaningful error reporting. To further
                    improve the performance of the application, validation can be disabled in
                    production environments.
                </p>
            </section>
            <section>
                <title>oxf.validation.user</title>
                <p>
                    <table ca="|l|p{0.5\textwidth}|">
                        <tr>
                            <th>Purpose</th>
                            <td>Controls user-defined validation</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td>
                                <code>boolean</code>
                            </td>
                        </tr>
                        <tr>
                            <th>Default Value</th>
                            <td>Enabled</td>
                        </tr>
                    </table>
                </p>
                <p>
                    User-defined validation is activated in the <link
                    href="reference-xpl-pipelines">XML Pipeline Definition Language</link> with the
                    attributes <code>schema-href</code> and <code>schema-uri</code>. To further
                    improve the performance of the application, validation can be disabled in
                    production environments.
                </p>
            </section>
            <section>
                <title>oxf.prologue</title>
                <p>
                    <table ca="|l|p{0.5\textwidth}|">
                        <tr>
                            <th>Purpose</th>
                            <td>Defines Presentation Server processors</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td><code>xs:anyURI</code></td>
                        </tr>
                        <tr>
                            <th>Default Value</th>
                            <td>A default prologue is loaded automatically</td>
                        </tr>
                    </table>
                </p>
                <p>
                    Loads an Presentation Server prologue file, where processors are declared.
                    Presentation Server is bundled with a default prologue file containing all
                    processors. You can create processors (see the <link
                    href="reference-processor-api">processor API</link>) and declare them in a
                    custom prologue. The custom prologue doesn't replace, but completes the default
                    prologue. It is possible to override a default processor with a custom
                    implementation by binding it to the same URI as the default processor. The
                    following example shows a simple custom prologue declaring an hypothetical
                    processor:
                </p>
                <xml-source>
                    <processors>
                        <processor name="oxf:myprocessor">
                            <class name="com.company.oxf.MyProcessor"/>
                        </processor>
                    </processors>
                </xml-source>
            </section>
            <section>
                <title>sax.inspection</title>
                <p>
                    <table ca="|l|p{0.5\textwidth}|">
                        <tr>
                            <th>Purpose</th>
                            <td>Enable inspection SAX events</td>
                        </tr>
                        <tr>
                            <th>Type</th>
                            <td><code>xs:boolean</code></td>
                        </tr>
                        <tr>
                            <th>Default Value</th>
                            <td>false</td>
                        </tr>
                    </table>
                </p>
                <p>
                    SAX is the underlying mechanism in OIS by which processors receive and generate
                    XML data. Given only the constraints of the SAX API, it is possible for a
                    processor to generate an invalid sequence of SAX events. Another processor that
                    receives that invalid sequence of events may or may not be able to deal with it
                    without throwing an exception. Some processors try to process invalid SAX
                    events, while others throw exceptions. This means that when a processor
                    generating an invalid sequence of SAX events is used in a pipeline, the problem
                    might go unnoticed, or it might cause some other processor downstream to throw
                    an exception.
                </p>
                <p>
                    To deal more efficiently with those cases, the <code>sax.inspection</code>
                    property can be set to <code>true</code>. When it is set to true, the pipeline
                    engine checks the outputs of every processor at runtime and makes sure that
                    valid SAX events are generated. When an error is detected, an exception is
                    thrown right away, with information about the processor that generated the
                    invalid SAX events.
                </p>
                <p>
                    There is a performance penalty for enabling SAX events inspection. So this
                    property should not be enabled on a production system.
                </p>
            </section>
        </section>
        <section>
            <title>Processor Properties</title>
            <anchor id="java-processor"/>
            <section>
                <title>Java Processor</title>
                <anchor id="classpath"/>
                <section>
                    <title>Class Path</title>
                    <p>
                        <table ca="|l|p{0.5\textwidth}|">
                            <tr>
                                <th>Name</th>
                                <td><code>classpath</code></td>
                            </tr>
                            <tr>
                                <th>Purpose</th>
                                <td>
                                    Defines a directory where Java class files are located. The
                                    <link href="processors-java">Java processor</link> dynamically
                                    compiles Java code, and may need some libraries. This property
                                    defines the classpath used by the compiler.
                                </td>
                            </tr>
                            <tr>
                                <th>Processor name</th>
                                <td><code><a href="processors-java">oxf:java</a></code></td>
                            </tr>
                            <tr>
                                <th>Type</th>
                                <td><code>xs:string</code></td>
                            </tr>
                            <tr>
                                <th>Default Value</th>
                                <td>None</td>
                            </tr>
                        </table>
                    </p>
                </section>
                <anchor id="jarpath"/>
                <section>
                    <title>JAR Path</title>
                    <p>
                        <table ca="|l|p{0.5\textwidth}|">
                            <tr>
                                <th>Name</th>
                                <td><code>jarpath</code></td>
                            </tr>
                            <tr>
                                <th>Purpose</th>
                                <td>
                                    Defines a list of directories where JAR files are located. The
                                    <link href="processors-java">Java processor</link> dynamically
                                    compiles Java code, and may need some libraries. This property
                                    defines a "JAR path", a list of directories containing JAR files
                                    that will be added to the classpath when compiling and running
                                    the processor executed by the Java processor.
                                </td>
                            </tr>
                            <tr>
                                <th>Processor name</th>
                                <td><code><a href="processors-java">oxf:java</a></code></td>
                            </tr>
                            <tr>
                                <th>Type</th>
                                <td><code>xs:string</code></td>
                            </tr>
                            <tr>
                                <th>Default Value</th>
                                <td>None</td>
                            </tr>
                        </table>
                    </p>
                </section>
            </section>
            <anchor id="email-processor"/>
            <section>
                <title>Email Processor</title>
                <section>
                    <title>Global SMTP Host</title>
                    <p>
                        The following property can be specified globally as a property instead of
                        being part of the processor configuration:
                    </p>
                    <p>
                        <table ca="|l|p{0.5\textwidth}|">
                            <tr>
                                <th>Name</th>
                                <td><code>smtp-host</code></td>
                            </tr>
                            <tr>
                                <th>Purpose</th>
                                <td>
                                    Configure the SMTP host for all email processors. This global
                                    property can be overridden by local processor configurations.
                                </td>
                            </tr>
                            <tr>
                                <th>Processor name</th>
                                <td><code><a href="processors-messaging">oxf:email</a></code></td>
                            </tr>
                            <tr>
                                <th>Type</th>
                                <td><code>xs:string</code></td>
                            </tr>
                            <tr>
                                <th>Default Value</th>
                                <td>None</td>
                            </tr>
                        </table>
                    </p>
                </section>
                <p>
                    The following properties can be used for testing purposes:
                </p>
                <section>
                    <title>Test SMTP host</title>
                    <p>
                        <table ca="|l|p{0.5\textwidth}|">
                            <tr>
                                <th>Name</th>
                                <td><code>test-smtp-host</code></td>
                            </tr>
                            <tr>
                                <th>Purpose</th>
                                <td>
                                    Configure a test SMTP host for all email processors. This global
                                    property when specified overrides all the other SMTP host
                                    configurations for all Email processors, whether in the processor
                                    configuration or using the <code>smtp-host</code> property.
                                </td>
                            </tr>
                            <tr>
                                <th>Processor name</th>
                                <td><code><a href="processors-messaging">oxf:email</a></code></td>
                            </tr>
                            <tr>
                                <th>Type</th>
                                <td><code>xs:string</code></td>
                            </tr>
                            <tr>
                                <th>Default Value</th>
                                <td>None</td>
                            </tr>
                        </table>
                    </p>
                    <note>
                        This property replaces the deprecated <code>smtp</code> property.
                    </note>
                </section>
                <section>
                    <title>Test Recipient</title>
                    <p>
                        <table ca="|l|p{0.5\textwidth}|">
                            <tr>
                                <th>Name</th>
                                <td><code>test-to</code></td>
                            </tr>
                            <tr>
                                <th>Purpose</th>
                                <td>
                                    Configure a test recipient email address for all email processors.
                                    This global property when specified overrides all the other SMTP
                                    recipient configurations for all Email processors.
                                </td>
                            </tr>
                            <tr>
                                <th>Processor name</th>
                                <td><code><a href="processors-messaging">oxf:email</a></code></td>
                            </tr>
                            <tr>
                                <th>Type</th>
                                <td><code>xs:string</code></td>
                            </tr>
                            <tr>
                                <th>Default Value</th>
                                <td>None</td>
                            </tr>
                        </table>
                    </p>
                    <note>
                        This property replaces the deprecated <code>forceto</code> property.
                    </note>
                </section>
                <p>
                    For example, those properties can be used as follows:
                </p>
                <xml-source>
                    <property as="xs:string" processor-name="oxf:email" name="smtp-host" value="mail.example.org"/>
                    <property as="xs:string" processor-name="oxf:email" name="test-smtp-host" value="test.example.org"/>
                    <property as="xs:string" processor-name="oxf:email" name="test-to" value="joe@example.org"/>
                </xml-source>
                <p>
                    The test properties can easily be commented out for deployment.
                </p>
            </section>
        </section>
    </body>
</document>
