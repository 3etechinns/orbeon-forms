<!--
    Copyright (C) 2004 Orbeon, Inc.
  
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
  
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.
  
    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xforms="http://www.w3.org/2002/xforms"
    xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
    xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:portlet="http://www.orbeon.org/oxf/portlet"
    xmlns:f="http://orbeon.org/oxf/xml/formatting"
    xmlns:xforms-utils="java:org.orbeon.oxf.processor.xforms.XFormsUtils">

    <xsl:import href="oxf:/oxf/xslt/utils/copy-modes.xsl"/>

    <!-- Inputs -->
    <xsl:variable name="xhtml-data-hidden" select="/*" as="element()"/>
    <xsl:variable name="annotated-data" select="document('input:annotated-data')/*" as="element()"/>

    <!-- All the forms generated by portlets -->
    <xsl:variable name="forms" select="$xhtml-data-hidden//(xhtml:form|form)[@portlet:is-portlet-form = 'true']" as="element()*"/>
    <xsl:variable name="forms-ids" select="for $i in $forms return generate-id($i)" as="xs:string*"/>

    <!-- All the anchors generated by portlets -->
    <xsl:variable name="anchors" select="$xhtml-data-hidden//*[@portlet:is-portlet-content = 'true']//(xhtml:a|a)[@href and not(matches(@href, '^[a-z|A-Z]+:')) and not(@f:url-type = 'resource')]" as="element()*"/>
    <xsl:variable name="anchor-ids" select="for $i in $anchors return generate-id($i)" as="xs:string*"/>

    <!-- Match outer xforms:group element -->
    <xsl:variable name="reference-xform" select="($annotated-data//xforms:group)[1]" as="element()?"/>

    <xsl:variable name="reference-xform-instance" as="element()?">
        <xsl:copy-of select="$reference-xform//xxforms:hidden[@xxforms:name = '$instance' and @xxforms:value != '']"/>
    </xsl:variable>
    <xsl:variable name="reference-xform-key" as="element()?">
        <xsl:copy-of select="$reference-xform//xxforms:hidden[@xxforms:name = '$key' and @xxforms:value != '']"/>
    </xsl:variable>

    <!-- Main template -->
    <xsl:template match="/">
        <xsl:apply-templates select="$xhtml-data-hidden"/>
    </xsl:template>

    <!-- Annotate portlet forms with hidden portal data if needed -->
    <xsl:template match="*[generate-id() = $forms-ids]">
        <xsl:copy>
            <xsl:copy-of select="@*"/>

            <!-- Transform URL query parameters into hidden fields so as not to pollute the portal URL -->
            <xsl:if test="@action and substring-after(@action, '?') != '' ">
                <xsl:attribute name="action" select="substring-before(@action, '?')"/>

                <xsl:variable name="params" select="tokenize(substring-after(@action, '?'), '&amp;')" as="xs:string*"/>
                <xsl:for-each select="$params">
                    <xhtml:input type="hidden" name="{substring-before(., '=')}" value="{substring-after(., '=')}"/>
                </xsl:for-each>
            </xsl:if>

            <!-- Copy content of the form -->
            <xsl:apply-templates select="node()" mode="rewrite-form">
                <xsl:with-param name="portlet-id" select="@portlet:form-portlet-id" tunnel="yes"/>
            </xsl:apply-templates>

            <!-- Add hidden field with outer XForms instance data so that a non-portlet form instance can be regenerated -->
            <xsl:if test="$reference-xform-instance">
                <xhtml:input type="hidden" name="$instance" value="{$reference-xform-instance/@xxforms:value}"/>
            </xsl:if>
            <xsl:if test="$reference-xform-key">
                <xhtml:input type="hidden" name="$key" value="{$reference-xform-key/@xxforms:value}"/>
            </xsl:if>
        </xsl:copy>
    </xsl:template>

    <!-- Annotate portlet anchors with hidden portal data if needed -->
    <xsl:template match="*[generate-id() = $anchor-ids]" mode="#all">
        <xsl:copy>
            <xsl:copy-of select="@*"/>

            <!-- Override href attribute if necessary -->
            <xsl:if test="$reference-xform-instance and contains(@href, '$portlet$')"><!-- Don't add instance if we are going out of the portal anyway -->
                <xsl:variable name="params" select="concat('$instance=', escape-uri(normalize-space($reference-xform-instance/@xxforms:value), true()), 
                    '&amp;', '$key=', escape-uri(normalize-space($reference-xform-key/@xxforms:value), true()))"/>

                <xsl:if test="$params">
                    <xsl:attribute name="href">
                        <xsl:choose>
                            <xsl:when test="contains(@href, '?')">
                                <xsl:value-of select="concat(@href, '&amp;', $params)"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="concat(@href, '?', $params)"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:attribute>
                </xsl:if>
            </xsl:if>

            <xsl:apply-templates mode="#current"/>
        </xsl:copy>
    </xsl:template>

    <!-- Portlet form controls names are transformed here -->
    <xsl:template match="input|xhtml:input" mode="rewrite-form">
        <xsl:param name="portlet-id" tunnel="yes"/>
        <xsl:copy>
            <xsl:copy-of select="@*"/>
            <!-- Transform specially names for submit -->
            <xsl:if test="@name">
                <xsl:attribute name="name" select="concat('$portlet$', if (@type='submit' or @type='image') then 'a' else 'p', $portlet-id, '.', @name)"/>
            </xsl:if>
            <!-- There may be content in the body of an input element! -->
            <xsl:apply-templates/>
        </xsl:copy>
    </xsl:template>

    <!-- Portlet form controls names are transformed here -->
    <xsl:template match="select|xhtml:select|textarea|xhtml:textarea" mode="rewrite-form">
        <xsl:param name="portlet-id" tunnel="yes"/>
        <xsl:copy>
            <xsl:copy-of select="@*"/>
            <xsl:if test="@name">
                <xsl:attribute name="name" select="concat('$portlet$p', $portlet-id, '.', @name)"/>
            </xsl:if>
            <xsl:apply-templates/>
        </xsl:copy>
    </xsl:template>

</xsl:stylesheet>
