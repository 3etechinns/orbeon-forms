<!--
    Copyright (C) 2004 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<example-descriptor>
    <title>XForms Upload Control</title>
    <xi:include href="example-descriptor-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <description>
        <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
                You can upload JPEG images with the form. The uploaded images are received in the
                XForms instance as an <code>xs:anyURI</code> type, and then either sent directly to the
                Web browser, to an external Web service, or as a BLOB to a relational database (the
                latter requires some configuration).
            </p>
            <p>
                In the case of the simple file upload, the first image is sent directly to the Web
                browser. The model makes sure that the Binary serializer is used, and no page view is
                called.
            </p>
            <p>
                The external Web Service stores the images on a public server and returns for each image
                an URL that points to the image data. The URL is then used to refer to the uploaded
                image from this page.
            </p>
            <p>
                When uploading the result to a database, images are streamed to the database and stored
                as BLOBs. An URL is generated to identify the first image in the database. When reading
                the image, a separate model is used to retrieve the image from the BLOB and send it to
                the Binary serializer.
            </p>
        </div>
    </description>
</example-descriptor>
