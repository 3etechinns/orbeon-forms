<!--
    Copyright (C) 2004 Orbeon, Inc.
  
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
  
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.
  
    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<example-descriptor>
    <title>Internationalization</title>
    <xi:include href="example-descriptor-files.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
    <description>
        <div xmlns="http://www.w3.org/1999/xhtml" xmlns:f="http://orbeon.org/oxf/xml/formatting" xmlns:xforms="http://www.w3.org/2002/xforms">
            <p>
                This example shows how you can internationalize your XForms application and localize
                it in different languages. The first page of the example allows you to chose between
                a language or locale. Upon selection, the locale is submitted to an XML service
                which stores it into the user's server-side session. When loaded, the second page
                includes localized resources by loading an external XForms instance:
            </p>
            <f:xml-source show-namespaces="false">
                <xforms:instance id="i18n" src="i18n-resources"/>
            </f:xml-source>
            <p>
                The URL <code>i18n-resources</code> resolves to an XML service which retrieves the
                correct XML instance based on the locale stored into the user's server-side
                session. The resources XML document looks like this:
            </p>
            <f:xml-source show-namespaces="false">
                <resources xmlns="">
                    <web>Web</web>
                    <images>Images</images>
                    <news>News</news>
                    <search>Search</search>
                </resources>
            </f:xml-source>
            <p>
                The XForms page can then access resources using constructs like the following:
            </p>
            <f:xml-source show-namespaces="false">
                <xforms:output ref="instance('i18n')/web"/>
                <xforms:label ref="instance('i18n')/search"/>
            </f:xml-source>
        </div>
    </description>
</example-descriptor>
