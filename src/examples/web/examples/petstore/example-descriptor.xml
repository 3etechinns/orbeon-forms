<!--
    Copyright (C) 2004 Orbeon, Inc.
  
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
  
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<example-descriptor>
    <title>OPS Pet Store</title>
    <xi:include href="example-descriptor-files.xml" xmlns:xi="http://www.w3.org/2003/XInclude"/>
    <requires-setup>true</requires-setup>
    <description>
        <div xmlns="http://www.w3.org/1999/xhtml">
            <h4>About the OPS Pet Store</h4>
            <p>
                The OPS Pet Store is an implementation of <a
                href="http://java.sun.com/blueprints/code/jps131/docs/index.html">Sun's Java Pet Store
                Demo</a> entirely built with OPS. We provide below a standalone WAR file for the OPS Pet
                Store. This WAR file can be deployed on an application server (or servlet container).
                Instructions on how to download and install the OPS Pet Store are provided below.
            </p>
            <p>
                We explore below some of the key advantages that the architecture of the OPS Pet Store
                provides over Sun's version.
            </p>
            <p align="center">
                <img print-format="png" src="doc/pages/petstore-web-home-small.png" width="200" height="175"/>
            </p>
            <h4>Look &amp; Feel</h4>
            <p>
                In addition to the Web browser look &amp; feel provided by Sun's Pet Store, the OPS Pet
                Store features a look &amp; feel for PDAs. The screenshot at the top of this page shows
                the Web look &amp; feel; the two screenshots below have been taken while browsing the
                OPS Pet Store on a Palm with the PDA look &amp; feel.
            </p>
            <p align="center">
                <img print-format="jpg" src="doc/pages/petstore-pda-home-small.jpg" width="130" height="182"/>
            </p>
            <p>
                Using plain old JSP, the natural way to implement multiple look &amp; feels is to copy
                all the JSP files used for the Web look &amp; feel in an other directory and to modify
                each file to suit a PDA screen. With OPS, we just have to make sure that a page view
                (the equivalent of a JSP in the OPS world) generates tags representing a structural
                version of the page that does not include any look &amp; feel information (for instance,
                one would put the title of the page in a simple <code>&lt;title&gt;</code> tag, instead
                of using HTML / CSS). This structural version is then converted appropriately for a
                specific look &amp; feel with a stylesheet.
            </p>
            <p>
                In the OPS Pet Store source code, <code>pages/category-view.xsl</code> implements the
                view for the page listing all the products for a category. Note that this page uses
                structural tags like <code>&lt;title&gt;</code> and <code>&lt;box-table&gt;</code>. All
                the views use the same set of tags. Those tags are converted to actual HTML targeted at
                either a Web browser or a PDA in the stylesheets <code>epilogue/layout-web.xsl</code>
                and <code>epilogue/layout-pda.xsl</code>.
            </p>
            <h4>Internationalization</h4>
            <p>
                The Pet Store is available in both English and Japanese. In Sun's version,
                internationalization is performed by copying all the JSP files and changing the English
                strings to Japanese. This leads to a huge duplication of code. Instead, with OPS we can
                use in the view tags like: <code>&lt;i18n:text key="welcome"/&gt;</code>. Then those
                tags are replaced by the actual text corresponding to "welcome" in the user's locale in
                a single stylesheet.

                <p align="center">
                    <img print-format="png" src="doc/pages/petstore-jp-small.png" width="200" height="103" border="1"/>
                </p>

                The stylesheet replacing the <code>&lt;i18n:text&gt;</code> with actual localized text
                is <code>epilogue/i18n.xsl</code>. The resources for the English and Japanese languages
                are stored in <code>epilogue/i18n-en_US.xml</code> and
                <code>epilogue/i18n-ja_JP.xml</code>.
            </p>
            <h4>Backend</h4>
            <p>
                The OPS Pet Store can use two different data stores: either a SQL database or an XML
                file. The type of store to be used is specified in <code>database/type.xml</code> and
                can be changed dynamically. By default, the content of this file is
                <code>&lt;type&gt;db&lt;/type&gt;</code> and the database is used. This can be changed
                to <code>&lt;type&gt;file&lt;/type&gt;</code>, in which case the content of the file
                <code>database/database.xml</code> will be used instead of the database.
            </p>

            <p>
                The backend of the Pet Store essentially needs to query the database, for instance to
                get all the products in a category or the details about an item. See for instance
                <code>pages/category-model.xpl</code> which uses the <a href="doc/processors-sql">SQL
                Processor</a> to generate XML from the result of a SQL query.
            </p>

            <p>
                You can read the OPS PetStore <a href="/petstore-sources">source files</a>.
            </p>
        </div>
    </description>
</example-descriptor>
