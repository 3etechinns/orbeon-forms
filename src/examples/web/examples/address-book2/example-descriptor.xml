<!--
    Copyright (C) 2004 Orbeon, Inc.
  
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
  
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.
  
    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<example-descriptor xmlns:f="http://orbeon.org/oxf/xml/formatting" xmlns:xhtml="http://www.w3.org/1999/xhtml">
    <title>Address Book NG</title>
    <xi:include href="example-descriptor-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <description>
        <div xmlns="http://www.w3.org/1999/xhtml">
            <p>
                This example demonstrates a basic use of the <a href="/doc/processors-sql"
                f:url-type="resource">SQL processor</a> as well as using XForms to create a simple
                database UI.
            </p>
            <p>
                See also the <a href="/goto-example/address-book" f:url-type="resource">Address
                Book Classic</a> example.
            </p>
            <p>
                This example's user interface is built on the following ideas:
            </p>
            <ul>
                <li>
                    <p>
                        <b>Use of <code>xforms:repeat</code>.</b> <code>xforms:repeat</code>
                        iterates over a collection of rows in the <code>main</code> XForms instance
                        containing the address book entries. The rows displayed here are read-only.
                    </p>
                </li>
                <li>
                    <p>
                        <b>Insersion and deletion.</b> Those actions are implemented by filling-out
                        different XForms instances containing enough information for the "backend"
                        to process. For example, the "delete" action provides the id of the row to
                        delete. The Page Flow reacts to those two actions by implementing XML
                        services. Each service runs an action XPL pipeline, and then returns the
                        updated address book content.
                    </p>
                </li>
            </ul>
        </div>
    </description>
</example-descriptor>
