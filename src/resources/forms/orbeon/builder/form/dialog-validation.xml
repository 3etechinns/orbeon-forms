<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2008 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xxforms:dialog xmlns:xhtml="http://www.w3.org/1999/xhtml"
      xmlns:xforms="http://www.w3.org/2002/xforms"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
      xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
      xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
      xmlns:saxon="http://saxon.sf.net/"

      id="fb-edit-validation-dialog" appearance="minimal" model="fb-validation-model">

    <xforms:label>Edit Validation Properties</xforms:label>
    <xxforms:variable name="instance" select="instance('fb-validation-editor-instance')"/>
    <xhtml:div>
        <xhtml:div class="fr-grid">
            <xhtml:div class="fr-grid-content fb-hide-alert">
            <!--<xhtml:table>-->
                <!--<xhtml:tr>-->
                    <!--<xhtml:td>-->
                        <!-- Built-in type selection -->
                        <xforms:select1 ref="$instance/builtin-type">
                            <xforms:label>Built-in Type</xforms:label>
                            <xforms:hint>Built-in data type</xforms:hint>
                            <!--<xforms:item>-->
                                <!--<xforms:label>[Select...]</xforms:label>-->
                                <!--<xforms:value/>-->
                            <!--</xforms:item>-->
                            <xforms:itemset nodeset="instance('fb-validation-types-instance')/root()//(choices | type)">
                                <xforms:label ref="if (self::choices) then label else if (label) then label else ."/>
                                <xforms:value ref="if (self::choices) then () else if (value) then value else ."/>
                            </xforms:itemset>
                            <xforms:setvalue ev:event="xforms-value-changed" if=". != ''" ref="../schema-type"/>
                        </xforms:select1>
                    <!--</xhtml:td>-->
                    <!--<xhtml:td>-->
                        <xforms:select1 ref="$instance/required" appearance="full">
                            <xforms:label>Requiredness</xforms:label>
                            <xforms:hint>Whether the data is required</xforms:hint>
                            <xforms:item>
                                <xforms:label>Required</xforms:label>
                                <xforms:value>true</xforms:value>
                            </xforms:item>
                            <xforms:item>
                                <xforms:label>Optional</xforms:label>
                                <xforms:value>false</xforms:value>
                            </xforms:item>
                        </xforms:select1>
                        <!--<xforms:select ref="$instance/mark-required" appearance="full">-->
                            <!--<xforms:label/>-->
                            <!--<xforms:item>-->
                                <!--<xforms:label>Mark as required</xforms:label>-->
                                <!--<xforms:value>true</xforms:value>-->
                            <!--</xforms:item>-->
                        <!--</xforms:select>-->
                        <!--<xforms:select ref="$instance/allow-blanks" appearance="full">-->
                            <!--<xforms:label/>-->
                            <!--<xforms:item>-->
                                <!--<xforms:label>Allow blanks</xforms:label>-->
                                <!--<xforms:value>true</xforms:value>-->
                            <!--</xforms:item>-->
                        <!--</xforms:select>-->
                    <!--</xhtml:td>-->
                <!--</xhtml:tr>-->
            <!--</xhtml:table>-->
                        <xforms:input ref="$instance/calculate">
                            <xforms:label>
                                <xhtml:img src="/apps/fr/style/images/silk/calculator_edit.png" alt="" title=""/>
                                <xhtml:span>Calculated Value</xhtml:span>
                            </xforms:label>
                            <xforms:hint>XPath expression</xforms:hint>
                        </xforms:input>

                        <!-- Schema type selection if applicable -->
                        <xforms:select1 ref="$instance/schema-type[$model/xs:schema]">
                            <xforms:label>Schema Type</xforms:label>
                            <xforms:hint>Imported schema type</xforms:hint>
                            <xforms:item>
                                <xforms:label>[Select...]</xforms:label>
                                <xforms:value/>
                            </xforms:item>
                            <xforms:itemset nodeset="$model/xs:schema/xs:simpleType">
                                <xforms:label ref="@name"/>
                                <xforms:value ref="@name"/>
                            </xforms:itemset>
                            <xforms:setvalue ev:event="xforms-value-changed" if=". != ''" ref="../builtin-type"/>
                        </xforms:select1>

                        <!-- Alert message -->
                        <xforms:textarea ref="$instance/alert">
                            <xforms:label>Alert Message</xforms:label>
                            <xforms:hint>Message to display when the data is incorrect</xforms:hint>
                        </xforms:textarea>
                </xhtml:div>
            </xhtml:div>

            <xhtml:div class="fr-dialog-buttons">
                <xforms:trigger class="fr-inplace-rename">
                    <xforms:label>Apply</xforms:label>
                    <!-- Close and save upon DOMActivate -->
                    <xforms:dispatch ev:event="DOMActivate" name="xxforms-dialog-close" target="fb-edit-validation-dialog"/>
                </xforms:trigger>
                or
                <xforms:trigger appearance="minimal" class="fr-inplace-cancel">
                    <xforms:label>Cancel</xforms:label>
                    <!-- Close and cancel upon DOMActivate -->
                    <xforms:dispatch ev:event="DOMActivate" name="xxforms-dialog-close" target="fb-edit-validation-dialog">
                        <xxforms:context name="fb:save" select="false()"/>
                    </xforms:dispatch>
                </xforms:trigger>
            </xhtml:div>
    </xhtml:div>

    <!-- Save data upon close, unless explicitly prevented -->
    <xforms:action ev:event="xxforms-dialog-close" if="not(event('fb:save') = false())">
        <xxforms:variable name="instance" select="instance('fb-validation-editor-instance')"/>
        <xxforms:variable name="current-control" select="if ($current-control-name != '') then $body//*[@id = concat($current-control-name, '-control')] else ()"/>
        <xxforms:variable name="current-control-resource" select="$current-resources/*[name() = $current-control-name]"/>
        <xxforms:variable name="current-bind-id" select="concat($current-control-name, '-bind')"/>

        <!-- Copy back the alert -->
        <xforms:setvalue ref="$current-control-resource/alert" value="$instance/alert"/>
        <!-- Switch between default alert message and user-specified alert message as needed -->
        <xforms:setvalue if="normalize-space($instance/alert) != ''" ref="$current-control/xforms:alert/@ref" value="concat('$form-resources/', $current-control-name, '/alert')"/>
        <xforms:setvalue if="normalize-space($instance/alert) = ''" ref="$current-control/xforms:alert/@ref" value="'$fr-resources/detail/labels/alert'"/>

        <xxforms:variable name="is-bind"
                          select="$instance/schema-type != ''
                                    or $instance/builtin-type != 'string'
                                    or $instance/required = 'true'
                                    or normalize-space($instance/calculate) != ''"/>
        <xforms:action if="$is-bind">

            <!-- Insert bind if needed -->
            <xforms:dispatch name="fb-ensure-bind" target="fr-form-model">
                <xxforms:context name="control-name" select="$current-control-name"/>
            </xforms:dispatch>

            <!-- Make sure the control points to the bind -->
            <xforms:action context="$current-control">
                <xforms:delete nodeset="@ref"/>
                <xforms:insert context="." origin="xxforms:attribute('bind', $current-bind-id)"/>
            </xforms:action>

            <xxforms:variable name="new-bind" select="$model//xforms:bind[@id = $current-bind-id]"/>
            <xforms:action context="$new-bind">
                <!-- Set built-in type if needed -->
                <xforms:insert if="$instance/builtin-type != ''"
                               context="." origin="xxforms:attribute('type', concat(if ($instance/required = 'true') then 'xs:' else 'xforms:', $instance/builtin-type))"/>
                <xforms:insert if="$instance/required = 'true'"
                               context="." origin="xxforms:attribute('required', 'true()')"/>
                <xforms:delete if="$instance/required = 'false'"
                               context="." nodeset="@required"/>

                <!-- Set schema type if needed -->
                <!-- TODO: Handle namespace and prefix for namespace -->
                <xforms:insert if="$instance/schema-type != ''"
                               context="." origin="xxforms:attribute('type', $instance/schema-type)"/>

                <!-- Set calculated value if needed -->
                <xforms:insert if="normalize-space($instance/calculate) != ''"
                               context="." origin="xxforms:attribute('calculate', $instance/calculate)"/>
            </xforms:action>

            <!-- TODO: constraints -->

        </xforms:action>
        <xxforms:variable name="bind" select="$model//xforms:bind[@id = $current-bind-id]"/>
        <xforms:action if="not($is-bind) and exists($bind)">
            <!-- Remove bind and associated data -->

            <!-- Make sure the control doesn't point to the bind -->
            <xforms:delete nodeset="$current-control/@bind"/>
            <xforms:insert context="$current-control" origin="xxforms:attribute('ref', $current-control-name)"/>

            <!-- Delete the bind -->
            <xforms:delete nodeset="$bind"/>

        </xforms:action>
    </xforms:action>

    <!-- When the dialog opens, get type information from the form -->
    <xforms:action ev:event="xxforms-dialog-open">
        <xxforms:variable name="instance" select="instance('fb-validation-editor-instance')"/>
        <xxforms:variable name="current-control-resource" select="$current-resources/*[name() = $current-control-name]"/>
        <xxforms:variable name="current-bind-id" select="concat($current-control-name, '-bind')"/>
        <xxforms:variable name="current-bind" select="$model//xforms:bind[@id = $current-bind-id]"/>

        <!-- Copy alert -->
        <xforms:setvalue ref="$instance/alert" value="$current-control-resource/alert"/>

        <!-- Copy bind information -->

        <!-- Set string type if there is no type specified at all -->
        <xforms:setvalue if="not($current-bind/@type)" ref="$instance/builtin-type">string</xforms:setvalue>
        <xforms:setvalue ref="$instance/schema-type"/>
        <xforms:setvalue ref="$instance/required">false</xforms:setvalue>

        <!-- Set type information if there is a type specified -->
        <xforms:action if="$current-bind/@type">
            <xxforms:variable name="is-builtin-type" select="starts-with($current-bind/@type, 'xs:') or starts-with($current-bind/@type, 'xforms:')"/>
            <xforms:setvalue if="$is-builtin-type" ref="$instance/builtin-type" value="substring-after($current-bind/@type, ':')"/>
            <!-- TODO: Handle namespace and prefix for namespace -->
            <xforms:setvalue if="not($is-builtin-type)"
                             ref="$instance/schema-type" value="$current-bind/@type"/>
            <xforms:setvalue ref="$instance/required" value="starts-with($current-bind/@type, 'xs:')"/>
        </xforms:action>

        <!-- Set calculate -->
        <xforms:setvalue ref="$instance/calculate" value="$current-bind/@calculate"/>
    </xforms:action>

    <xforms:model id="fb-validation-model">
        <xforms:instance id="fb-validation-editor-instance">
            <validation>
                <builtin-type/>
                <required>false</required>
                <calculate/>
                <schema-type/>
                <alert/>
            </validation>
        </xforms:instance>

        <xforms:bind nodeset="instance('fb-validation-editor-instance')">
            <xforms:bind nodeset="required" readonly="../schema-type != ''"/>
        </xforms:bind>

        <!-- TODO: i18n -->
        <!-- TODO: more user-friendly labels for common types -->
        <xforms:instance id="fb-validation-types-instance" xxforms:readonly="true">
            <choices>
                <choices>
                    <label>Common Types</label>
                    <type allow-empty="true">string</type>
                    <type>float</type>
                    <type>double</type>
                    <type>decimal</type>
                    <type>integer</type>
                    <type>dateTime</type>
                    <type>time</type>
                    <type>date</type>
                    <type>boolean</type>
                    <type>anyURI</type>
                </choices>
                <choices>
                    <label>String Types</label>
                    <type allow-empty="true">string</type>
                    <type allow-empty="true">normalizedString</type>
                    <type>token</type>
                    <type>language</type>
                    <type>Name</type>
                    <type>NCName</type>
                    <type>ID</type>
                    <type>IDREF</type>
                    <type>IDREFS</type>
                    <type>ENTITY</type>
                    <type>ENTITIES</type>
                    <type>NMTOKEN</type>
                    <type>NMTOKENS</type>
                </choices>
                <choices>
                    <label>Number Types</label>
                    <type>float</type>
                    <type>double</type>
                    <type>decimal</type>
                    <type>integer</type>
                    <type>long</type>
                    <type>int</type>
                    <type>short</type>
                    <type>byte</type>
                    <type>positiveInteger</type>
                    <type>nonPositiveInteger</type>
                    <type>negativeInteger</type>
                    <type>nonNegativeInteger</type>
                    <type>unsignedLong</type>
                    <type>unsignedInt</type>
                    <type>unsignedShort</type>
                    <type>unsignedByte</type>
                </choices>
                <choices>
                    <label>Time Types</label>
                    <type>duration</type>
                    <type>dateTime</type>
                    <type>time</type>
                    <type>date</type>
                    <type>gYearMonth</type>
                    <type>gYear</type>
                    <type>gMonthDay</type>
                    <type>gDay</type>
                    <type>gMonth</type>
                </choices>
                <choices>
                    <label>Other Types</label>
                    <type>boolean</type>
                    <!-- Not 100% sure if these two types allow empty content -->
                    <type allow-empty="true">hexBinary</type>
                    <type allow-empty="true">base64Binary</type>
                    <type>anyURI</type>
                    <type>QName</type>
                    <type>NOTATION</type>
                </choices>
            </choices>
        </xforms:instance>
    </xforms:model>

</xxforms:dialog>
