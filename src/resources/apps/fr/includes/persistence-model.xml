<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2007 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xforms:model id="fr-persistence-model"
              xmlns:xs="http://www.w3.org/2001/XMLSchema"
              xmlns:xforms="http://www.w3.org/2002/xforms"
              xmlns:ev="http://www.w3.org/2001/xml-events"
              xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
              xmlns:f="http://orbeon.org/oxf/xml/formatting"
              xmlns:exist="http://exist.sourceforge.net/NS/exist"
              xmlns:xhtml="http://www.w3.org/1999/xhtml">

    <!-- Respond to model initialization -->
    <!-- TODO: Should not do this on summary page -->
    <xforms:action ev:event="xforms-ready">
        <!-- Get configuration for the current form -->
        <xforms:send submission="get-configuration-submission"/>
        <!-- A document id is provided -->
        <xforms:action if="instance('fr-parameters-instance')/document != ''">
            <!-- Display document with that id -->
            <xforms:send submission="get-document-submission"/>
        </xforms:action>
        <!-- No document id is provided and we are not in print view -->
        <xforms:action if="instance('fr-parameters-instance')/document = '' and instance('fr-parameters-instance')/mode != 'print'">
            <!-- Create new empty document -->
            <xforms:send submission="get-template-submission"/>
        </xforms:action>

        <!-- Force all this so we can safely mark the data status as clean -->
        <xforms:rebuild/>
        <xforms:recalculate/>
        <xforms:revalidate/>
        <xforms:refresh/>

        <!-- Mark the initial data status as clean -->
        <xforms:setvalue ref="instance('fr-persistence-instance')/data-status">clean</xforms:setvalue>
    </xforms:action>

    <!-- Respond to orbeon-save event -->
    <xforms:action ev:event="orbeon-save">
        <xforms:setvalue ref="instance('fr-persistence-instance')/save-attempted">true</xforms:setvalue>
        <xforms:action if="instance('fr-parameters-instance')/document != ''">
            <!-- Update -->
            <xforms:send submission="update-submission"/>
        </xforms:action>
        <xforms:action if="instance('fr-parameters-instance')/document = ''">
            <!-- Create -->
            <xforms:send submission="create-submission"/>
        </xforms:action>
    </xforms:action>

    <xforms:action ev:event="orbeon-create">
        <xforms:recalculate/>
        <xforms:load resource="/fr/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}/new/"/>
    </xforms:action>

    <xforms:action ev:event="orbeon-edit">
        <xforms:recalculate/>
        <xforms:load resource="/fr/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}/{instance('fr-summary-instance')/document[index('documents-repeat')]/@name}/edit"/>
    </xforms:action>

    <xforms:action ev:event="orbeon-delete">
        <xforms:send submission="delete-document-submission"/>
        <xforms:send submission="search-submission"/>
    </xforms:action>

    <xforms:action ev:event="orbeon-view">
        <xforms:recalculate/>
        <xforms:load resource="/fr/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}/{instance('fr-summary-instance')/document[index('documents-repeat')]/@name}/view"/>
    </xforms:action>

    <xforms:action ev:event="orbeon-xml">
        <xforms:recalculate/>
        <!-- TODO -->
        <!--<xforms:load resource="xxx" f:url-type="resource"/>-->
    </xforms:action>

    <xforms:action ev:event="orbeon-pdf">
        <xforms:recalculate/>
        <!-- TODO -->
        <!--<xforms:load resource="xxx" f:url-type="resource" xxforms:show-progress="false"/>-->
    </xforms:action>

    <xforms:action ev:event="orbeon-summary">
        <xforms:load resource="/fr/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}"/>
    </xforms:action>

    <!-- Parameters passed to this page -->
    <xforms:instance id="fr-parameters-instance" src="input:instance"/>

    <!-- Special cross-model bind to set the form instance read-only when necessary -->
    <xforms:bind nodeset="xxforms:instance('fr-form-instance')" readonly="xxforms:instance('fr-parameters-instance')/mode = ('view', 'print')"/>

    <!-- Get document template -->
    <xforms:submission id="get-template-submission"
            method="get" serialization="none"
            resource="/fr/service/template/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}"
            replace="instance" xxforms:instance="fr-form-instance">
        <xforms:message ev:event="xforms-submit-error" level="xxforms:log-error"><xforms:output value="event('error-type')"/></xforms:message>
    </xforms:submission>

    <!-- Get document -->
    <xforms:submission id="get-document-submission"
            method="get" serialization="none"
            resource="/fr/service/crud/exist/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}/{instance('fr-parameters-instance')/document}"
            replace="instance" xxforms:instance="fr-form-instance"/>

    <!-- Create document -->
    <xforms:instance id="fr-create-instance">
        <dummy xmlns=""/>
    </xforms:instance>

    <xforms:submission id="create-submission"
            validate="true"
            method="put" ref="xxforms:instance('fr-form-instance')"
            resource="/fr/service/crud/exist/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}"
            replace="instance" instance="fr-create-instance">
        <xforms:setvalue ev:event="xforms-submit-done" ref="instance('fr-parameters-instance')/document" value="instance('fr-create-instance')"/>
    </xforms:submission>

    <!-- Update document -->
    <xforms:submission id="update-submission"
            validate="true"
            method="put" ref="xxforms:instance('fr-form-instance')"
            resource="/fr/service/crud/exist/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}/{instance('fr-parameters-instance')/document}"
            replace="none">
    </xforms:submission>

    <!-- Delete document -->
    <xforms:submission id="delete-document-submission"
            method="delete" serialization="none"
            resource="/fr/service/crud/exist/{instance('fr-parameters-instance')/app}/{instance('fr-parameters-instance')/form}/{instance('fr-summary-instance')/document[index('documents-repeat')]/@name}"
            replace="none"/>

    <!-- Instance to track search results and paging -->
    <xforms:instance id="fr-search-instance">
        <search xmlns="">
            <app/>
            <form/>
            <!-- Search query to execute -->
            <query/>
            <!-- Paging -->
            <page-size>10</page-size>
            <page-number>1</page-number>
            <!-- Sorting -->
            <sort-key/>
        </search>
    </xforms:instance>

    <xforms:instance id="fr-search-template" xxforms:readonly="true">
        <query xmlns="" name="" path="" type="" control=""/>
    </xforms:instance>7

    <xforms:instance id="fr-paging-instance">
        <search xmlns="">
            <total/>
            <page-size/>
            <page-number/>
            <from>0</from>
            <to>0</to>
            <prev-trigger/>
            <next-trigger/>
        </search>
    </xforms:instance>

    <!-- Calculations for page navigation -->
    <xforms:bind nodeset="instance('fr-paging-instance')">
        <xforms:bind nodeset="total" calculate="(instance('fr-summary-instance')/@total, 0)[1]"/>
        <xforms:bind nodeset="page-size" calculate="instance('fr-search-instance')/page-size"/>
        <xforms:bind nodeset="page-number" calculate="instance('fr-search-instance')/page-number"/>
        <xforms:bind nodeset="from" calculate="if (../total = 0) then 0 else (../page-number - 1)* ../page-size + 1"/>
        <xforms:bind nodeset="to" calculate="min((../page-number * ../page-size, ../total))"/>
        <xforms:bind nodeset="prev-trigger" readonly="../total = 0 or xs:integer(../page-number) le 1"/>
        <xforms:bind nodeset="next-trigger" readonly="../total = 0 or ../total le ../to"/>
    </xforms:bind>

    <xforms:instance id="fr-source-form-instance">
        <dummy xmlns=""/>
    </xforms:instance>

    <xforms:instance id="fr-summary-headers-instance">
        <dummy xmlns=""/>
    </xforms:instance>

    <xforms:instance id="fr-configuration-instance">
        <configuration xmlns=""/>
    </xforms:instance>

    <xforms:submission id="get-configuration-submission"
            method="get" serialization="none"
            resource="/fr/service/configuration/{
                instance('fr-parameters-instance')/app}/{
                instance('fr-parameters-instance')/form}"
            replace="instance" instance="fr-source-form-instance" xxforms:readonly="true">

        <!-- Extract summary configuration information from the XHTML document -->
        <xforms:action ev:event="xforms-submit-done">
            <!--<xforms:insert context="instance('fr-search-instance')" nodeset="query"-->
                <!--origin="instance('fr-source-form-instance')/search"/>-->

            <!-- Extract fields which must appear in the summary -->
            <xforms:insert context="instance('fr-configuration-instance')" nodeset="*"
                origin="instance('fr-source-form-instance')/xhtml:body//xforms:*[@class and tokenize(@class, ' ') = ('fr-summary', 'fr-search')]"/>

            <!-- Create elements holding structured search data -->
            <xforms:action xxforms:iterate="instance('fr-source-form-instance')/xhtml:body//xforms:*[@class and tokenize(@class, ' ') = ('fr-search')]">
                <!-- Insert empty template -->
                <xforms:insert context="instance('fr-search-instance')" nodeset="query" origin="instance('fr-search-template')"/>
                <!-- Add control information to template -->
                <xforms:setvalue ref="instance('fr-search-instance')/query[last()]/@control" value="context()/local-name()"/>
                <!-- Add meta-information to template -->
                <xforms:action if="context()/@bind">
                    <xforms:action context="instance('fr-source-form-instance')/xhtml:head/xforms:model//xforms:bind[@id = context()/@bind]">
                        <xforms:setvalue ref="instance('fr-search-instance')/query[last()]/@name" value="substring-before(context()/@id, '-bind')"/>
                        <xforms:setvalue ref="instance('fr-search-instance')/query[last()]/@path" value="string-join(context()/ancestor-or-self::xforms:bind/@nodeset, '/')"/>
                        <xforms:setvalue ref="instance('fr-search-instance')/query[last()]/@type" value="if (context()/@type) then context()/@type else 'xs:string'"/>
                    </xforms:action>
                </xforms:action>
                <xforms:action if="context()/@ref">
                    <xforms:setvalue ref="instance('fr-search-instance')/query[last()]/@name" value="context()/@ref"/>
                    <xforms:setvalue ref="instance('fr-search-instance')/query[last()]/@path" value="string-join((context()/ancestor-or-self::*/(@ref | @context))[position() gt 1], '/')"/>
                </xforms:action>
            </xforms:action>

            <!-- xxx TODO extract other information -->

        </xforms:action>
    </xforms:submission>

    <!-- Summary data -->
    <xforms:instance id="fr-summary-instance">
        <documents xmlns="" total="0">
            <!--<document name="" created="" last-modified="">-->
                <!--<id/>-->
                <!--<details>-->
                    <!--<detail/>-->
                    <!--<detail/>-->
                <!--</details>-->
            <!--</document>-->
        </documents>
    </xforms:instance>

    <xforms:submission id="search-submission"
            ref="instance('fr-search-instance')"
            method="post"
            resource="/fr/service/search/exist/{
                instance('fr-parameters-instance')/app}/{
                instance('fr-parameters-instance')/form}"
            replace="instance" instance="fr-summary-instance"/>

    <xforms:instance id="fr-persistence-instance">
        <save xmlns="">
            <!-- Whether an attempt to submit was ever done -->
            <save-attempted>false</save-attempted>
            <!-- Whether form data is clean or dirty -->
            <data-status>clean</data-status>
            <!-- Success or error message to display -->
            <message/>
            <!-- Error document returned -->
            <error/>
        </save>
    </xforms:instance>

    <xforms:instance id="fr-triggers-instance">
        <triggers xmlns="">
            <save/>
            <discard/>
        </triggers>
    </xforms:instance>

    <xforms:bind nodeset="instance('fr-triggers-instance')">
        <xforms:bind nodeset="save" readonly="instance('fr-persistence-instance')/data-status = 'clean'"/>
        <!--<xforms:bind nodeset="discard" readonly="xxx"/>-->
    </xforms:bind>

    <!-- React to successful submission when saving -->
    <xforms:action ev:event="xforms-submit-done" if="event('target') = ('create-submission', 'update-submission')">
        <xforms:setvalue ref="instance('fr-persistence-instance')/message">Document saved.</xforms:setvalue><!-- TODO: i18n -->
        <xforms:setvalue ref="instance('fr-persistence-instance')/data-status">clean</xforms:setvalue>
        <xforms:toggle case="fr-message-success"/>
    </xforms:action>

    <!-- React to failed submission -->
    <xforms:action ev:event="xforms-submit-error" if="event('target') = ('create-submission', 'update-submission')">
        <xforms:setvalue ref="instance('fr-persistence-instance')/error" value="event('response-body')"/>
        <xforms:message level="xxforms:log-error"><xforms:output value="event('response-body')"/></xforms:message>
        <xforms:action if="event('error-type') = 'validation-error'">
            <xforms:setvalue ref="instance('fr-persistence-instance')/message">Your document could not be saved because errors were found.</xforms:setvalue><!-- TODO: i18n -->
            <xforms:toggle case="fr-message-validation-error"/>
        </xforms:action>
        <xforms:action if="event('error-type') != 'validation-error'">
            <xforms:setvalue ref="instance('fr-persistence-instance')/message">Unable to save document. Please contact your system administrator.</xforms:setvalue><!-- TODO: i18n -->
            <xforms:toggle case="fr-message-fatal-error"/>
        </xforms:action>
    </xforms:action>

    <!-- Mark status as dirty if data changes -->
    <xforms:setvalue ev:observer="fr-form-instance" ev:event="xforms-insert" ref="instance('fr-persistence-instance')/data-status">dirty</xforms:setvalue>
    <xforms:setvalue ev:observer="fr-form-instance" ev:event="xforms-delete" ref="instance('fr-persistence-instance')/data-status">dirty</xforms:setvalue>

    <!-- Mark status as dirty if data changes in fr-form-instance instance only -->
    <!-- NOTE: Only handle events coming from controls bound to "fr-form-instance" instance -->
    <xforms:setvalue ev:observer="fr-form-group" ev:event="xforms-value-changed"
                     if="event('target-ref')/root()/* is xxforms:instance('fr-form-instance')"
                     ref="instance('fr-persistence-instance')/data-status">dirty</xforms:setvalue>

    <!-- Clear message upon DOMFocusIn on #fr-form-group -->
    <xforms:setvalue ev:observer="fr-form-group" ev:event="DOMFocusIn" ref="instance('fr-persistence-instance')/message"/>

</xforms:model>