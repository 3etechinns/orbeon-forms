<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2007-2008 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xforms:model id="fr-persistence-model"
              xmlns:xs="http://www.w3.org/2001/XMLSchema"
              xmlns:xforms="http://www.w3.org/2002/xforms"
              xmlns:ev="http://www.w3.org/2001/xml-events"
              xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
              xmlns:f="http://orbeon.org/oxf/xml/formatting"
              xmlns:exist="http://exist.sourceforge.net/NS/exist"
              xmlns:xhtml="http://www.w3.org/1999/xhtml">

    <!-- Model initialization -->
    <!-- TODO: Should not do this on summary page, for example -->
    <xforms:action ev:event="xforms-model-construct-done">
        <!-- Initialize URIs based on hierarchy of properties -->

        <!-- TODO: This code must be moved to a function -->
        <xxforms:variable name="prefix" select="'oxf.fr.persistence.app'"/>
        <xxforms:variable name="suffix" select="'uri'"/>
        
        <xxforms:variable name="properties"
                          select="(string-join(($prefix, $app, $form, $suffix), '.'),
                                   string-join(($prefix, $app, $suffix), '.'),
                                   string-join(($prefix, '*', $suffix), '.'))"/>

        <xxforms:variable name="form-properties" select="(string-join(($prefix, $app, $form, 'form', $suffix), '.'), $properties)"/>

        <xforms:action xxforms:iterate="$form-properties">
            <xforms:action if="not(empty(xxforms:property(context()))) and instance('fr-uris-instance')/form-collection = ''">
                <xforms:setvalue ref="instance('fr-uris-instance')/form-collection" value="xxforms:property(context())"/>
            </xforms:action>
        </xforms:action>

        <xxforms:variable name="data-properties" select="(string-join(($prefix, $app, $form, 'data', $suffix), '.'), $properties)"/>

        <xforms:action xxforms:iterate="$data-properties">
            <xforms:action if="not(empty(xxforms:property(context()))) and instance('fr-uris-instance')/data-collection = ''">
                <xforms:setvalue ref="instance('fr-uris-instance')/data-collection" value="xxforms:property(context())"/>
            </xforms:action>
        </xforms:action>
        
        <!-- A document id is provided -->
        <xforms:action if="$parameters/document != ''">
            <!-- Display document with that id -->
            <xforms:send submission="get-document-submission"/>
        </xforms:action>
        <!-- No document id is provided and we are not in print view -->
        <xforms:action if="$parameters/document = '' and $parameters/mode != 'print'">
            <!-- Create random document id -->
            <xforms:setvalue ref="$parameters/document" value="digest(string(random(true)), 'MD5', 'hex')"/>
        </xforms:action>

        <!-- Force all this so we can safely mark the data status as clean -->
        <xforms:rebuild/>
        <xforms:recalculate/>
        <xforms:revalidate/>
        <xforms:refresh/>

        <!-- Mark the initial data status as clean -->
        <xforms:setvalue ref="instance('fr-persistence-instance')/data-status">clean</xforms:setvalue>
    </xforms:action>

    <!-- Delete operation -->
    <xforms:action ev:event="fr-delete-data">
        <xforms:send submission="fr-delete-document-submission">
            <xxforms:context name="document-id" select="event('document-id')"/>
        </xforms:send>
    </xforms:action>

    <xforms:submission id="fr-delete-document-submission"
            method="delete" serialization="none"
            resource="{instance('fr-uris-instance')/data-collection}/crud/{$parameters/app}/{$parameters/form}/data/{event('document-id')}/data"
            replace="none"/>

    <!-- Publish form operation -->
    <xforms:action ev:event="fr-publish-form">

        <!-- TODO: This code must be moved to a function -->
        <xxforms:variable name="prefix" select="'oxf.fr.persistence.app'"/>
        <xxforms:variable name="app" select="event('application')"/>
        <xxforms:variable name="form" select="event('form')"/>
        <xxforms:variable name="suffix" select="'uri'"/>

        <!-- List of properties from specific to generic -->
        <xxforms:variable name="form-properties"
                          select="(string-join(($prefix, $app, $form, 'form', $suffix), '.'),
                                   string-join(($prefix, $app, $form, $suffix), '.'),
                                   string-join(($prefix, $app, $suffix), '.'),
                                   string-join(($prefix, '*', $suffix), '.'))"/>

        <!-- Iterate to find property -->
        <xforms:action xxforms:iterate="$form-properties">
            <xforms:action if="not(empty(xxforms:property(context()))) and instance('fr-uris-instance')/temp-collection = ''">
                <xforms:setvalue ref="instance('fr-uris-instance')/temp-collection" value="xxforms:property(context())"/>
            </xforms:action>
        </xforms:action>



        <xforms:send submission="fr-publish-form-submission">
            <xxforms:context name="collection" select="instance('fr-uris-instance')/temp-collection"/>
            <xxforms:context name="application" select="$app"/>
            <xxforms:context name="form" select="$form"/>
        </xforms:send>
    </xforms:action>

    <xforms:submission id="fr-publish-form-submission"
            ref="xxforms:instance('fr-form-instance')" method="put"
            resource="{event('collection')}/crud/{event('application')}/{event('form')}/form/form.xhtml"
            replace="none">

        <!--<xforms:message ev:event="xforms-submit">-->
            <!--zzz-->
            <!--<xforms:output value="event('application')"/>-->
            <!--xxx-->
            <!--<xforms:output value="event('form')"/>-->
        <!--</xforms:message>-->

    </xforms:submission>

    <!-- Respond to save button activation -->
    <xforms:action ev:event="DOMActivate" ev:observer="fr-save-button">
        <xforms:setvalue ref="instance('fr-persistence-instance')/save-attempted">true</xforms:setvalue>
        <xforms:action if="$parameters/document != ''">
            <!-- Create or update -->
            <xforms:send submission="fr-create-update-submission"/>
        </xforms:action>
        <xforms:action if="$parameters/document = ''">
            <!-- Create -->
            <!--<xforms:send submission="fr-create-submission"/>-->
        </xforms:action>
    </xforms:action>

    <!-- Go back to the Form Runner summary page -->
    <xforms:action ev:event="fr-goto-summary">
        <xforms:load resource="/fr/{$parameters/app}/{$parameters/form}"/>
    </xforms:action>

    <!-- Parameters passed to this page -->
    <!-- NOTE: the <document> element may be modified, so we don't set this as read-only -->
    <xforms:instance id="fr-parameters-instance" src="input:instance"/>
    <xxforms:variable name="parameters" select="instance('fr-parameters-instance')"/>
    <xxforms:variable name="app" select="$parameters/app"/>
    <xxforms:variable name="form" select="$parameters/form"/>
    <xxforms:variable name="document" select="$parameters/document"/>

    <!-- Persistence URIs -->
    <xforms:instance id="fr-uris-instance">
        <uris xmlns="">
            <form-collection/>
            <data-collection/>
            <temp-collection/>
        </uris>
    </xforms:instance>

    <!-- Special cross-model bind to set the form instance read-only when necessary -->
    <xforms:bind nodeset="xxforms:instance('fr-form-instance')" readonly="$parameters/mode = ('view', 'print')"/>

    <xforms:submission id="fr-create-update-submission"
            validate="true"
            method="put" ref="xxforms:instance('fr-form-instance')"
            resource="{instance('fr-uris-instance')/data-collection}/crud/{$parameters/app}/{$parameters/form}/data/{$parameters/document}/data"
            replace="none">
    </xforms:submission>

    <!-- Get document -->
    <xforms:submission id="get-document-submission"
            method="get" serialization="none"
            resource="{instance('fr-uris-instance')/data-collection}/crud/{$parameters/app}/{$parameters/form}/data/{$parameters/document}/data"
            replace="instance" xxforms:instance="fr-form-instance"/>

    <xforms:instance id="fr-persistence-instance">
        <save xmlns="">
            <!-- Whether an attempt to submit was ever done -->
            <save-attempted>false</save-attempted>
            <!-- Whether form data is clean or dirty -->
            <data-status>clean</data-status>
            <!-- Success or error message to display -->
            <message/>
            <!-- Error document returned -->
            <error/>
        </save>
    </xforms:instance>

    <xforms:instance id="fr-triggers-instance">
        <triggers xmlns="">
            <save/>
            <discard/>
        </triggers>
    </xforms:instance>

    <xforms:bind nodeset="instance('fr-triggers-instance')">
        <xforms:bind nodeset="save" readonly="instance('fr-persistence-instance')/data-status = 'clean'"/>
    </xforms:bind>

    <!-- React to successful submission when saving/updating -->
    <xforms:action ev:event="xforms-submit-done" ev:target="fr-create-submission fr-create-update-submission">
        <xforms:setvalue ref="instance('fr-persistence-instance')/message"
                         value="xxforms:instance('fr-fr-current-resources')/detail/messages/save-success"/>
        <xforms:setvalue ref="instance('fr-persistence-instance')/data-status">clean</xforms:setvalue>
        <xforms:toggle case="fr-message-success"/>
    </xforms:action>

    <!-- React to failed submission when saving/updating -->
    <xforms:action ev:event="xforms-submit-error" ev:target="fr-create-submission fr-create-update-submission">
        <xforms:setvalue ref="instance('fr-persistence-instance')/error" value="event('response-body')"/>
        <xforms:message level="xxforms:log-error"><xforms:output value="event('response-body')"/></xforms:message>
        <xforms:action if="event('error-type') = 'validation-error'">
            <xforms:setvalue ref="instance('fr-persistence-instance')/message"
                             value="xxforms:instance('fr-fr-current-resources')/detail/messages/save-error-form"/>
            <xforms:toggle case="fr-message-validation-error"/>
        </xforms:action>
        <xforms:action if="event('error-type') != 'validation-error'">
            <xforms:setvalue ref="instance('fr-persistence-instance')/message"
                    value="xxforms:instance('fr-fr-current-resources')/detail/messages/save-error-form"/>
            <xforms:toggle case="fr-message-fatal-error"/>
        </xforms:action>
    </xforms:action>

    <!-- Mark status as dirty if data changes -->
    <xforms:setvalue ev:observer="fr-form-instance" ev:event="xforms-insert" ref="instance('fr-persistence-instance')/data-status">dirty</xforms:setvalue>
    <xforms:setvalue ev:observer="fr-form-instance" ev:event="xforms-delete" ref="instance('fr-persistence-instance')/data-status">dirty</xforms:setvalue>

    <!-- Mark status as dirty if data changes in fr-form-instance instance only -->
    <!-- NOTE: Only handle events coming from controls bound to "fr-form-instance" instance -->
    <xforms:setvalue ev:observer="fr-form-group" ev:event="xforms-value-changed"
                     if="event('target-ref')/root()/* is xxforms:instance('fr-form-instance')"
                     ref="instance('fr-persistence-instance')/data-status">dirty</xforms:setvalue>

    <!-- Clear message upon DOMFocusIn on #fr-form-group -->
    <xforms:setvalue ev:observer="fr-form-group" ev:event="DOMFocusIn" ref="instance('fr-persistence-instance')/message"/>

</xforms:model>
