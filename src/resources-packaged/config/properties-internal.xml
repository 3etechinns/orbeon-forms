<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<properties xmlns:xs="http://www.w3.org/2001/XMLSchema"
            xmlns:oxf="http://www.orbeon.com/oxf/processors">

    <!-- ==== Internal base properties ============================================================================ -->

    <!-- URL rewriting -->
    <property as="xs:string"  name="oxf.url-rewriting.platform-paths">
        ^/(ops/|config/|xbl/orbeon/|forms/orbeon/|apps/fr/|xforms-server).*$
    </property>
    <property as="xs:string"  name="oxf.url-rewriting.app-paths">
        ^/(apps|xbl|forms)/.*$
    </property>
    <property as="xs:string"  name="oxf.url-rewriting.app-prefix"                    value="/apps"/>

    <property as="xs:anyURI"  name="oxf.url-rewriting.service.base-uri"              value=""/>
    <property as="xs:string"  name="oxf.url-rewriting.wsrp.context"                  value=""/>
    <property as="xs:boolean" name="oxf.url-rewriting.wsrp.encode-resources"         value="false"/>

    <!-- HTTP client -->
    <property as="xs:string"  name="oxf.http.state"                                  value="session"/>
    <property as="xs:string"  name="oxf.http.forward-headers.private"                value="Orbeon-Client"/>
    <property as="xs:string"  name="oxf.http.forward-cookies.private"                value=""/>

    <!--
        Note on Cache-Control for HTTP responses:

        For pages, we used to set Cache-Control to public, however this caused a rare and hard to reproduce issue
        where IE 7 (and maybe other versions of IE, but not Firefox), over-aggressively cached pages generated by Orbeon
        Forms. As a result, user A could log a page, logout from the application; later, user B logs into the
        application with the same browser, navigates to the page, and gets the version generated earlier for user A,
        which was cached by the browser (no request being set by IE to the server).

        Setting Cache-Control to no-cache solves the problem, but in that case IE doesn't reset the value of form fields
        when navigating back to a page, which breaks the mechanism we have to restore the form upon hitting back in the
        browser. Setting Cache-Control to private, max-age=0 solves the caching issue and doesn't prevent IE from
        restoring form fields upon hitting back. This is also what Google does on their home page (as of 2010-12-02).

        Note on blank Pragma:

        Tomcat adds "Pragma", "Expires" and "Cache-Control" headers when resources are constrained,disabling caching if
        they are not set. We must re-set them to allow caching.
    -->
    <property as="xs:string"  name="oxf.http.page.cache-headers">
        Cache-Control: private, max-age=0; Pragma:
    </property>
    <property as="xs:string"  name="oxf.http.resource.cache-headers">
        Cache-Control: public; Pragma:
    </property>
    <property as="xs:string"  name="oxf.http.nocache.cache-headers">
        Cache-Control: no-cache, no-store, must-revalidate; Pragma: no-cache; Expires: 0
    </property>

    <!--
        About oxf.http.internal-paths:

        The following property contains a regular expression which determines which request paths are internal.
        Since 4.7, we avoid doing HTTP requests over the network for requests that target Orbeon Forms itself, and
        we don't support anymore those requests being made over the network, so this property shouldn't be changed
        by users, and thus isn't listed in the documentation.
      -->
    <property as="xs:string"  name="oxf.http.internal-paths"                         value="(?!/exist/)/.*(?&lt;!\.jsp)"/>

    <!-- Processor-specific properties -->
    <property as="xs:string"  processor-name="oxf:page-flow" name="instance-passing"         value="redirect"/>
    <property as="xs:string"  processor-name="oxf:page-flow" name="submission-path"          value="/xforms-server-submit"/>
    <property as="xs:anyURI"  processor-name="oxf:page-flow" name="submission-model"         value="oxf:/ops/xforms/xforms-server-submit.xpl"/>

    <!-- ==== Internal XForms properties ========================================================================== -->



    <!-- ==== Internal Form Runner properties ===================================================================== -->

    <property as="xs:string"  name="oxf.fr.css.uri.*.*">
        /apps/fr/style/form-runner-common.css
        /apps/fr/style/form-runner-base.css
        /apps/fr/style/form-runner-orbeon.css
        /apps/fr/style/form-runner-responsive.css
    </property>

    <property as="xs:string"  name="oxf.fr.js.uri.*.*">
        /apps/fr/script/form-runner.js
    </property>

    <!-- PDF template formatting -->
    <!-- NOTE: In the future we don't want those to apply to XHTML, but to an intermediate representation -->
    <!-- NOTE: Can't use xxf:split() in these expressions yet (saxon:evaluate() doesn't find the functions). -->
    <property as="xs:string"  name="oxf.fr.pdf.format.input-string">
        .//*[tokenize(@class, '\s+') = 'xforms-input-input']/@value/string()
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.input-dateTime">
        string-join(.//*[tokenize(@class, '\s+') = 'xforms-input-input']/@value/string(), ' ')
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.output-string">
        .//*[tokenize(@class, '\s+') = 'xforms-output-output']/string()
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.textarea">
        .//textarea/string()
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.select-label">
        (.//option[@selected = 'selected'], .//input[@checked = 'checked']/parent::label)[1]/string()
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.select-value">
        (.//option[@selected = 'selected'], .//input[@checked = 'checked'])[1]/@value/string()
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.select-labels-string">
        string-join((.//option[@selected = 'selected'], .//input[@checked = 'checked']/parent::label)/string(), ' - ')
    </property>

    <property as="xs:string"  name="oxf.fr.pdf.format.select-labels">
        (.//option[@selected = 'selected'], .//input[@checked = 'checked']/parent::label)/string()
    </property>
    <property as="xs:string"  name="oxf.fr.pdf.format.select-values">
        (.//option[@selected = 'selected'], .//input[@checked = 'checked'])/@value/string()
    </property>

    <property as="xs:string"  name="oxf.fr.pdf.format.attachment-url">
        (./descendant-or-self::*[tokenize(@class, '\s+') = 'xforms-output' and not(tokenize(@class, '\s+') = 'xforms-disabled')]/
           img[not(tokenize(@class, '\s+') = ('xforms-help', 'xforms-disabled')) and (tokenize(@class, '\s+') = 'xforms-output-output' or not(@id))]/@src)[1]/
           string()[. != '/ops/images/xforms/spacer.gif']
    </property>

    <property as="xs:string"  name="oxf.fr.pdf.format.attachment-metadata">
        for $info in (.//*[@class = 'xforms-upload-info'])
        return string-join($info/*[@class = ('xforms-upload-filename', 'xforms-upload-mediatype', 'xforms-upload-size')]/string()[normalize-space()], ', ')
    </property>

    <property as="xs:string"  name="oxf.fr.pdf.format.fr-number">
        .//*[tokenize(@class, '\s+') = 'xbl-fr-number-xforms-input']/input/@value/string()
    </property>

    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-input.*"                          value="input-string"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-input.date"                       value="input-string"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-input.time"                       value="input-string"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-input.dateTime"                   value="input-dateTime"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-input.boolean"                    value="select-value"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-output.*"                         value="output-string"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-textarea.*"                       value="textarea"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-select.*"                         value="select-labels-string"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.xforms-select1.*"                        value="select-label"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.fr-us-state"                             value="select-label"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.fr-attachment.anyURI"                    value="attachment-metadata"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.fr-image-attachment.anyURI"              value="attachment-url"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.fr-number.*"                             value="fr-number"/>
    <property as="xs:string"  name="oxf.fr.pdf.map.*.*.fr-currency.*"                           value="fr-number"/>

     <!-- Internal processes -->
    <property as="xs:string"  name="oxf.fr.detail.process.save-import.*.*"                      value='save'/>
    <property as="xs:string"  name="oxf.fr.detail.process.validation-dialog-review.*.*"         value='abort'/>
    <property as="xs:string"  name="oxf.fr.detail.process.validation-dialog-continue.*.*"       value='resume'/>
    <property as="xs:string"  name="oxf.fr.detail.process.autosave.*.*">
        save(draft = "true")
    </property>

    <!-- Reusable processes -->
    <property as="xs:string"  name="oxf.fr.detail.process.orbeon-home.*.*"                      value='navigate("/")'/>
    <property as="xs:string"  name="oxf.fr.detail.process.form-runner-home.*.*"                 value='navigate("/fr")'/>

    <property as="xs:string"  name="oxf.fr.detail.process.require-uploads.*.*">
        pending-uploads
        recover (error-message("upload-in-progress") then success)
    </property>
    <property as="xs:string"  name="oxf.fr.detail.process.require-valid.*.*">
        visit-all
        then captcha
        then validate("error")
        recover (visit-all then expand-all then error-message("form-validation-error") then success)
    </property>
    <property as="xs:string"  name="oxf.fr.detail.process.review-messages.*.*">
        validate("warning")
        then validate("info")
        recover (xf:show("fr-validation-dialog") then suspend)
    </property>
    <property as="xs:string"  name="oxf.fr.detail.process.validate-all.*.*">
        require-valid
        then review-messages
    </property>

    <!-- Home page internal processes -->
    <property as="xs:string"  name="oxf.fr.home.process.load-local">
        xf:send("read-local-metadata")
        then xf:dispatch("process-results")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.load-remote">
        xf:send("read-remote-metadata")
        then xf:dispatch("store-credentials")
        recover ask-credentials
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.ask-credentials">
        xf:show("fr-credentials-dialog")
        then suspend
        then load-remote
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.load-start-with-remote">
        load-remote
        then load-local
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.load-start-with-credentials">
        ask-credentials
        then load-local
    </property>

    <property as="xs:string"  name="oxf.fr.home.process.credentials-ok">
        resume
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.credentials-cancel">
        abort then load-local
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.publish-local">
        xf:dispatch("confirm-local-publish")    then suspend then xf:dispatch("local-publish")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.unpublish-local">
        xf:dispatch("confirm-local-unpublish")  then suspend then xf:dispatch("local-unpublish")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.publish-remote">
        xf:dispatch("confirm-remote-publish")   then suspend then xf:dispatch("remote-publish")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.unpublish-remote">
        xf:dispatch("confirm-remote-unpublish") then suspend then xf:dispatch("remote-unpublish")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.local-to-remote">
        xf:dispatch("confirm-local-to-remote")  then suspend then xf:dispatch("local-to-remote")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.remote-to-local">
        xf:dispatch("confirm-remote-to-local")  then suspend then xf:dispatch("remote-to-local")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.upgrade-local">
        xf:dispatch("confirm-local-upgrade")    then suspend then xf:dispatch("local-upgrade")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.upgrade-remote">
        xf:dispatch("confirm-remote-upgrade")   then suspend then xf:dispatch("remote-upgrade")
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.confirmation-ok">
        resume
    </property>
    <property as="xs:string"  name="oxf.fr.home.process.confirmation-cancel">
        abort
    </property>

    <!-- ==== Internal Form Builder properties ==================================================================== -->

    <!-- In case somebody overrides with weaker properties -->
    <property as="xs:boolean" name="oxf.fr.detail.hints.inline.orbeon.builder"       value="true"/>
    <property as="xs:string"  name="oxf.fr.persistence.provider.orbeon.builder.form" value="resource"/>
    <property as="xs:string"  name="oxf.fr.detail.captcha.orbeon.builder"            value=""/>

</properties>
