<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilder">

    <xbl:binding
        id="fr-section"
        element="fr|section"
        xxf:external-events="fb-set-current-section fb-update-section-label"
        xxbl:mode="binding lhha custom-lhha">

        <xbl:resources>
            <xbl:style src="/xbl/orbeon/section/section.css"/>
        </xbl:resources>

        <xbl:handlers>
            <xbl:handler event="fr-expand" phase="target">
                <xf:toggle case="case-open"/>
            </xbl:handler>
            <xbl:handler event="fr-collapse" phase="target">
                <xf:toggle case="case-closed"/>
            </xbl:handler>
        </xbl:handlers>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/copy.xsl"/>
                <xsl:import href="oxf:/oxf/xslt/utils/xbl.xsl"/>

                <xsl:template match="/*">

                    <!-- Section configuration -->
                    <xsl:variable name="editable"          select="exists(@edit-ref)"/>
                    <xsl:variable name="ancestor-sections" select="count(ancestor::fr:section)"/><!-- TODO -->
                    <xsl:variable name="collapsible"       select="not(@collapsible = 'false' or @collapse = 'false')"/>
                    <xsl:variable name="animate"           select="not(@animate = 'false')"/>
                    <xsl:variable name="readonly"          select="@readonly = 'true'"/>
                    <xsl:variable name="is-repeat"         select="fbf:isRepeat(.)"/>
                    <xsl:variable name="appearance"        select="(@appearance, 'full')[1]"/>
                    <xsl:variable name="right-column"      select="$appearance = 'minimal' and not($readonly)"/>

                    <!-- Section content area -->
                    <xf:group appearance="xxf:internal" xxbl:scope="outer">

                        <xsl:if test="$editable">
                            <!-- Variables for design time -->
                            <xf:var name="fb-section"        value="for $src in xxf:instance('fb-form-instance') return id('{@id}', $src)"/>
                            <xf:var name="fb-can-do-classes" value="if (exists($fb-section)) then fbf:sectionCanDoClasses($fb-section) else ()"/>
                        </xsl:if>

                        <xf:var
                            name="view-mode"
                            value="
                                xxf:readonly(xxf:component-context()) or
                                xxf:instance('fr-parameters-instance')/mode = ('view', 'pdf', 'email')"/>

                        <!-- It'd be nice if we could put the class attribute directly on xbl-fr-section -->
                        <xf:group
                            class="{@class}{if ($editable) then ' {$fb-can-do-classes}' else ''}"
                            xxf:element="div">

                            <xf:group xxbl:scope="inner" appearance="xxf:internal">

                                <xf:var
                                    name="initially-open"
                                    value="xxf:instance('fr-parameters-instance')/mode/string() = ('view', 'pdf', 'email') or not('{@open}' = 'false')"/>

                                <!-- Section title area: open/close button, title, help -->
                                <xsl:element name="{if ($ancestor-sections = 0) then 'xh:h2' else 'xh:h3'}">
                                    <xsl:attribute name="class" select="'fr-section-title'"/>

                                    <!-- Open/close button -->
                                    <xf:group appearance="xxf:internal">
                                        <!-- A bit tricky: the switch is further below, and case('switch') can
                                             return () if the switch is not yet initialized. In that case, it means we
                                             are just becoming relevant, so use the value of $initially-open. -->
                                        <xf:var name="open" value="(for $switch in case('switch') return $switch = 'case-open', $initially-open)[1]"/>
                                        <xsl:if test="$collapsible">
                                            <!-- Handle DOMActivate event to open/close the switches -->
                                            <xf:toggle event="DOMActivate" case="case-{{if ($open) then 'closed' else 'open'}}"/>
                                        </xsl:if>

                                        <!-- Actual section title -->
                                        <xsl:choose>
                                            <xsl:when test="$collapsible">
                                                <xf:trigger appearance="minimal" class="fr-section-label fr-section-{{if ($open) then 'open' else 'closed'}}">
                                                    <xf:label value="xxf:label('fr-section')"/>
                                                    <xf:help  value="xxf:help('fr-section')"/>
                                                    <xf:hint  value="xxf:hint('fr-section')"/>
                                                </xf:trigger>
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xf:output appearance="minimal" class="fr-section-label" value="xxf:label('fr-section')">
                                                    <xf:help  value="xxf:help('fr-section')" />
                                                    <xf:hint  value="xxf:hint('fr-section')" />
                                                </xf:output>
                                            </xsl:otherwise>
                                        </xsl:choose>

                                    </xf:group>

                                </xsl:element>

                                <!-- Can't make switch non-relevant at runtime as we depend on relevance for validation:
                                     https://github.com/orbeon/orbeon-forms/issues/927 -->
                                <xf:switch id="switch" xxf:readonly-appearance="dynamic" xxf:element="div" xxf:xforms11-switch="{$editable}">
                                    <!-- Closed section -->
                                    <xf:case id="case-closed" selected="{{not($initially-open)}}"/>
                                    <!-- Open section -->
                                    <xf:case id="case-open" selected="{{$initially-open}}">
                                        <xf:group
                                            class="fr-section-content{ if (not($editable) and $animate) then ' xxforms-animate' else ''}"
                                            xxbl:scope="outer"
                                            xxf:element="div">
                                            <xsl:choose>
                                                <xsl:when test="$is-repeat">
                                                    <fr:repeater
                                                        ref="*"
                                                        xbl:attr="template origin min max remove-constraint apply-defaults appearance">

                                                        <!-- Forward iteration events -->
                                                        <xf:action
                                                            event="fr-iteration-added fr-iteration-removed"
                                                            target="#observer"
                                                            propagate="stop">
                                                            <xf:dispatch
                                                                xxbl:scope="inner"
                                                                targetid="fr-section"
                                                                name="{{event('xxf:type')}}"/>
                                                        </xf:action>

                                                        <xsl:if test="$appearance = 'full' and not($readonly)">
                                                            <xh:div xxf:control="true" ref=".[not($view-mode)]" class="fr-repeat-menu dropdown">
                                                                <xh:button
                                                                    class="btn btn-mini fr-repeater-dropdown-button"
                                                                    aria-label="{{xxf:r('components.grid.menu', '|fr-fr-resources|')}}"
                                                                    aria-expanded="false">
                                                                    <xh:span class="caret"/>
                                                                </xh:button>
                                                            </xh:div>
                                                        </xsl:if>
                                                        <xh:div class="fr-repeat-content">
                                                            <xsl:apply-templates select="* except (xf:label, xf:help, fr:buttons)"/>
                                                        </xh:div>
                                                        <xsl:if test="$right-column and not($readonly)">
                                                            <xh:div xxf:control="true" ref=".[not($view-mode)]" class="fr-section-right-column">
                                                                <xf:group ref=".[$fr-repeater-can-remove]">
                                                                    <xh:button
                                                                        class="btn btn-link fr-repeater-remove-button"
                                                                        aria-label="{{xxf:r('components.grid.remove', '|fr-fr-resources|')}}">
                                                                        <xh:i class="icon-minus-sign"/>
                                                                    </xh:button>
                                                                </xf:group>
                                                                <xf:group ref=".[not($fr-repeater-can-remove)]">
                                                                    <xh:i class="icon-minus-sign disabled"/>
                                                                </xf:group>
                                                            </xh:div>
                                                        </xsl:if>
                                                    </fr:repeater>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:apply-templates select="* except (xf:label, xf:help, fr:buttons)"/>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xf:group>
                                    </xf:case>
                                </xf:switch>
                            </xf:group>
                        </xf:group>
                    </xf:group>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>