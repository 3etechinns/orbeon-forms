<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:exf="http://www.exforms.org/exf/1-0">

 	<xbl:script type="text/javascript" src="/ops/yui/element/element.js"/>
    <xbl:script src="/xbl/orbeon/tabview/tabview.js"/>
    <xbl:script src="/ops/yui/tabview/tabview-min.js"/>

    <xbl:binding id="fr-tabview" element="fr|tabview" xxbl:mode="binding">
        <xbl:resources>
            <xbl:style src="/ops/yui/tabview/assets/skins/sam/tabview.css"/>
            <xbl:style src="/xbl/orbeon/tabview/tabview.css"/>
        </xbl:resources>
        <xbl:handlers>
            <xbl:handler event="xforms-focus" phase="target" defaultAction="cancel">
                <!-- Override default behavior and focus on content-->
                <xforms:setfocus control="fr-tabview-content"/>
            </xbl:handler>
        </xbl:handlers>
        <xbl:implementation>
            <!-- Local model -->
            <xforms:model id="tabview-model">
                <xforms:instance id="tabview-instance">
                    <tabview-instance>
                        <active-tab-position/>
                    </tabview-instance>
                </xforms:instance>
            </xforms:model>
        </xbl:implementation>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/copy.xsl"/>

                <xsl:template match="/*">

                    <!-- Tab group, cannot be internal because accessed with "this" in TabView JS initialization -->
                    <xforms:group id="fr-tabview-group">

                        <!-- TODO: This should not be necessary, but we need it until this bug is fixed:
                             https://github.com/orbeon/orbeon-forms/issues/339 -->
                        <xsl:copy-of select="namespace::*"/>
                        <xsl:copy-of select="@class"/>

                        <!-- Initialization event -->
                        <xxforms:script id="xf-en" ev:event="xforms-enabled" ev:target="#observer">YAHOO.xbl.fr.TabView.instance(this).init();</xxforms:script>

                        <!-- Builds relevance-related variables for each tab -->
                        <xsl:for-each select="fr:tab">
                            <!-- Point to whatever the fr:tab is bound to, if anything -->
                            <xxforms:variable name="fr-tab-binding-{position()}">
                                <xxforms:sequence xxbl:scope="outer" select=".">
                                    <xsl:copy-of select="@model | @context | @ref | @bind"/>
                                </xxforms:sequence>
                            </xxforms:variable>
                            <!--  Is this tab relevant -->
                            <xxforms:variable name="fr-tab-relevance-{position()}"
                                select="exists($fr-tab-binding-{position()}) and exf:relevant($fr-tab-binding-{position()})"/>
                            <xxforms:variable name="fr-tab-relevance-{position()}"
                                select="exists($fr-tab-binding-{position()}) and exf:relevant($fr-tab-binding-{position()})"/>
                        </xsl:for-each>

                        <!-- Contains the relevance for all the tabs as a sequence of boolean values -->
                        <xxforms:variable name="fr-tab-relevances" select="({string-join(
                                for $tab-index in 1 to count(fr:tab) return concat('$fr-tab-relevance-', $tab-index), ',')})"/>
                        <!-- Store index of the first tab which is relevant -->
                        <xforms:setvalue ev:event="xforms-enabled" ev:target="#observer" ref="active-tab-position" value="index-of($fr-tab-relevances, true())[1]"/>

                        <xhtml:div class="yui-navset">
                            <!-- Tab labels -->
                            <xhtml:ul class="yui-nav">
                                <xsl:for-each select="fr:tab">
                                    <xsl:variable name="label" as="element(fr:label)" select="fr:label[1]"/>
                                    <xhtml:li class="{{if ($fr-tab-relevance-{position()}) then '' else 'xforms-disabled-subsequent'}}{{
                                                if (active-tab-position = '{position()}') then 'selected' else ''}}{{
                                                if (exf:readonly($fr-tab-binding-{position()})) then ' disabled' else ''}}{
                                                if (exists(@class)) then concat(' ', @class) else ''}" id="nav-{position()}">
                                        <!-- Transform xforms:label into xforms:output -->
                                        <xhtml:a href="#tab{position()}"><xhtml:em>
                                            <xsl:choose>
                                                <!-- Static label, just copy content -->
                                                <xsl:when test="empty($label/(@ref | @bind | @value))">
                                                    <xforms:group xxbl:scope="outer" appearance="xxforms:internal">
                                                        <xsl:copy-of select="$label/node()"/>
                                                    </xforms:group>
                                                </xsl:when>
                                                <!-- Dynamic label, generate xforms:output -->
                                                <xsl:otherwise>
                                                    <!-- Put content in outer scope -->
                                                    <xforms:output xxbl:scope="outer">
                                                        <xsl:copy-of select="$label/(@model | @context | @ref | @bind | @value | node())"/>
                                                    </xforms:output>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xhtml:em></xhtml:a>
                                    </xhtml:li>
                                </xsl:for-each>
                            </xhtml:ul>
                            <!-- Tab content -->
                            <!-- NOTE: It seems we use a group just so we can do a setfocus on it -->
                            <xforms:group class="yui-content" id="fr-tabview-content" xxforms:element="xhtml:div">
                                <xsl:for-each select="fr:tab">
                                    <xsl:variable name="tab-position" select="position()"/>
                                    <!-- This <div> represents the <fr:tab> element. Allow external fr-select and fr-deselect. -->
                                    <xforms:group xxbl:scope="outer" xxforms:element="xhtml:div" xxforms:external-events="fr-select fr-deselect">
                                        <xsl:copy-of select="@class | @id | @model | @context | @ref | @bind"/>

                                        <!-- Upon receiving fr-toggle, tell JavaScript -->
                                        <xxforms:script ev:event="fr-toggle"        ev:target="#observer">YAHOO.xbl.fr.TabView.instance(this).toggle(this);</xxforms:script>
                                        <!-- Listen to xforms-readonly and xforms-readwrite for this fr:tab -->
                                        <xxforms:script ev:event="xforms-readonly"  ev:target="#observer">YAHOO.xbl.fr.TabView.instance(this).readonly(this);</xxforms:script>
                                        <xxforms:script ev:event="xforms-readwrite" ev:target="#observer">YAHOO.xbl.fr.TabView.instance(this).readwrite(this);</xxforms:script>
                                        <!-- When this fr:tab is newly focused, toggle to it -->
                                        <xxforms:script ev:event="DOMFocusIn"       ev:target="#observer">YAHOO.xbl.fr.TabView.instance(this).toggle(this);</xxforms:script>

                                        <!-- Client dispatches fr-select upon tab selection -->
                                        <xforms:action ev:event="fr-select" ev:target="#observer">
                                            <xforms:setvalue xxbl:scope="inner" ref="active-tab-position" value="{$tab-position}"/>
                                        </xforms:action>

                                        <!-- Tab content -->
                                        <xsl:apply-templates select="node() except fr:label"/>
                                    </xforms:group>
                                </xsl:for-each>
                            </xforms:group>
                        </xhtml:div>
                    </xforms:group>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
