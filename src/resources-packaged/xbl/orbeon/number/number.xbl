<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:exf="http://www.exforms.org/exf/1-0"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors">

    <xbl:script src="/xbl/orbeon/number/number.js"/>
    <xbl:binding id="fr-number" element="fr|number" xxbl:mode="lhha binding">

        <!-- Orbeon Form Builder Component Metadata -->
        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">Number</display-name>
            <display-name lang="fr">Nombre</display-name>
            <display-name lang="ru">[Number]</display-name>
            <icon lang="en">
                <!-- TODO: icons -->
                <small-icon>/apps/fr/style/images/silk/plugin.png</small-icon>
                <large-icon>/apps/fr/style/images/silk/plugin.png</large-icon>
            </icon>
            <datatype>xforms:decimal</datatype>
            <template>
                 <fr:number>
                     <xforms:label ref=""/>
                     <xforms:hint ref=""/>
                     <xforms:help ref=""/>
                     <xforms:alert ref=""/>
                </fr:number>
            </template>
        </metadata>

        <xbl:resources>
            <xbl:style src="/xbl/orbeon/number/number.css"/>
        </xbl:resources>
        <xbl:handlers>
            <xbl:handler event="xforms-focus" phase="target" defaultAction="cancel">
                <xxforms:script id="xf-sf">YAHOO.xbl.fr.Number.instance(this).setfocus();</xxforms:script>
            </xbl:handler>
        </xbl:handlers>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/xbl.xsl"/>
                <xsl:template match="/*">
                    <!-- Either a number or currency -->
                    <xsl:variable name="is-currency" as="xs:boolean" select="exists(/fr:currency)"/>
                    <!-- JavaScript code obtaining the JavaScript companion object -->
                    <xsl:variable name="js-object" as="xs:string" select="concat('YAHOO.xbl.fr.', if ($is-currency) then 'Currency' else 'Number', '.instance(this)')"/>

                    <!-- XSLT needs a root element, and as of 2012-05-08 the listeners need an XForms parent which is not the template root -->
                    <xforms:group>

                        <xxforms:script ev:event="xforms-enabled" ev:target="#observer"><xsl:value-of select="$js-object"/>.init();</xxforms:script>
                        <xxforms:script ev:event="xforms-disabled" ev:target="#observer"><xsl:value-of select="$js-object"/>.destroy();</xxforms:script>

                        <!-- Access to parameters -->
                        <xsl:copy-of select="xxbl:parameter(., 'prefix')"/>
                        <xsl:copy-of select="xxbl:parameter(., 'decimal-separator')"/>
                        <xsl:copy-of select="xxbl:parameter(., 'grouping-separator')"/>

                        <xsl:copy-of select="xxbl:parameter(., 'digits-after-decimal')"/>
                        <!--<xsl:copy-of select="xxbl:parameter(., 'picture')"/>-->

                        <xforms:var name="picture-string"
                                    value="concat(
                                            '#,###',
                                            if (xs:integer($digits-after-decimal) gt 0) then '.' else '',
                                            substring('0000000000', 1, xs:integer($digits-after-decimal)))"/>

                        <!-- Access to XForms value and change event -->
                        <!-- TODO: Here it seems that if the value doesn't change, the xxforms:format doesn't run; this leads to a bug when the prefix changes and the amount stays the same -->
                        <!--
                            format:
                                if the value is a decimal: prefix and space (if any prefix), then formatted decimal with grouping and decimal separator
                                otherwise: keep the value as is
                            unformat:
                                first remove the grouping separator, then remove the prefix if any
                        -->
                        <xforms:input
                                ref="xxforms:binding('{if ($is-currency) then 'fr-currency' else 'fr-number'}')"
                                class="xbl-fr-number-xforms-input"
                                xxforms:format="
                                    if (. castable as xs:decimal)
                                    then concat(normalize-space($prefix),
                                              if (normalize-space($prefix)) then ' ' else '',
                                              translate(format-number(xs:decimal(.), $picture-string), ',.', concat($grouping-separator, $decimal-separator)))
                                    else ."
                                xxforms:unformat="
                                    for $r1 in
                                        replace(., concat('[\s', $grouping-separator, ']'), '')
                                    return
                                        if (normalize-space($prefix))
                                        then replace($r1, concat('^', string-join(for $p in string-to-codepoints($prefix) return concat('[', codepoints-to-string($p), ']'), '')), '')
                                        else $r1">

                            <xxforms:script id="xf-ch" ev:event="xforms-value-changed xxforms-iteration-moved"><xsl:value-of select="$js-object"/>.update();</xxforms:script>
                            <xxforms:script id="xf-ro" ev:event="xforms-readonly"><xsl:value-of select="$js-object"/>.readonly();</xxforms:script>
                            <xxforms:script id="xf-rw" ev:event="xforms-readwrite"><xsl:value-of select="$js-object"/>.readwrite();</xxforms:script>
                        </xforms:input>

                        <!-- The visible HTML input -->
                        <xhtml:input class="xbl-fr-number-visible-input xbl-html-input xforms-input-input"
                                     xbl:attr="tabindex tabindex=navindex"/>                                            <!-- .xforms-input-input is added so the border gets highlighted when the container gets .xforms-invalid-visited -->

                        <!-- Stop propagation of all local UI events -->
                        <xforms:action ev:event="#all" ev:propagate="stop"/>
                    </xforms:group>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
