<!--
    Copyright (C) 2008 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xhtml:html xmlns:xforms="http://www.w3.org/2002/xforms"
        xmlns:xhtml="http://www.w3.org/1999/xhtml"
        xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
        xmlns:ev="http://www.w3.org/2001/xml-events"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
        xmlns:xbl="http://www.w3.org/ns/xbl"
        xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xhtml:head>
        <xhtml:title>XBL - Autocomplete</xhtml:title>
        <xforms:model id="main-model">

            <xforms:instance id="instance">
                <instance/>
            </xforms:instance>
            <xforms:instance id="all-countries" src="oxf:/apps/xforms-controls/services/countries.xml"/>

        </xforms:model>
        <xhtml:link type="text/css" rel="stylesheet" href="/ops/yui/logger/assets/logger.css"/>
        <xhtml:script type="text/javascript" src="/ops/yui/logger/logger.js"/>
        <xhtml:script type="text/javascript" src="/ops/yui/yuitest/yuitest.js"/>
        <xhtml:script type="text/javascript">
            <![CDATA[
                YAHOO.tool.TestRunner.add(new YAHOO.tool.TestCase({

                    name: "Autocomplete maximum number of displayed results",
                    firstInputField: null,

                    checkLiCount: function(id, expectedCount) {
                        var autocomplete = YAHOO.util.Dom.get(id);
                        var inputField = YAHOO.util.Dom.getElementsByClassName("xforms-input-input", null, autocomplete)[0];
                        inputField.value = "a";
                        inputField.focus();
                        YAHOO.util.UserAction.keydown(inputField, { keyCode: 65 });
                        YAHOO.util.UserAction.keypress(inputField, { keyCode: 65 });
                        YAHOO.util.UserAction.keyup(inputField, { keyCode: 65 });
                        this.wait(function() {
                            var yuiBody = YAHOO.util.Dom.getElementsByClassName("yui-ac-bd", null, autocomplete)[0];
                            var lis = yuiBody.getElementsByTagName("li");
                            var actualCount = 0;
                            for (var lisIndex = 0; lisIndex < lis.length; lisIndex++) {
                                var li = lis[lisIndex];
                                if (YAHOO.util.Dom.getStyle(li, "display") != "none")
                                    actualCount++;
                            }
                            YAHOO.util.Assert.areEqual(expectedCount, actualCount);
                            // Set focus back to the first input field (if this is not the first input field), to close the suggestion list 
                            if (this.firstInputField == null) {
                                this.firstInputField = inputField;
                            } else {
                                this.firstInputField.focus();
                            }
                        }, 500);

                    },

                    testNoMax:                      function() { this.checkLiCount("no-max", 10); },
                    testMaxAsAttribute:             function() { this.checkLiCount("max-as-attribute", 5); },
                    testMaxAsElement:               function() { this.checkLiCount("max-as-element", 6); },
                    testMaxAsAttributeAndElement:   function() { this.checkLiCount("max-as-attribute-and-element", 7); }

                }));

                ORBEON.xforms.Events.orbeonLoadedEvent.subscribe(function() {
                    if (parent && parent.TestManager) {
                        parent.TestManager.load();
                    } else {
                        new YAHOO.tool.TestLogger();
                        YAHOO.tool.TestRunner.run();
                    }
                });
            ]]>
        </xhtml:script>
    </xhtml:head>
    <xhtml:body>
        <fr:autocomplete ref="instance('instance')" id="no-max" dynamic-itemset="false">
            <xforms:itemset nodeset="instance('all-countries')/country">
                <xforms:label ref="name"/>
                <xforms:value ref="name"/>
            </xforms:itemset>
        </fr:autocomplete>
        <fr:autocomplete ref="instance('instance')" id="max-as-attribute" max-results-displayed="5" dynamic-itemset="false">
            <xforms:itemset nodeset="instance('all-countries')/country">
                <xforms:label ref="name"/>
                <xforms:value ref="name"/>
            </xforms:itemset>
        </fr:autocomplete>
        <fr:autocomplete ref="instance('instance')" id="max-as-element">
            <fr:max-results-displayed value="'6'"/>
            <xforms:itemset nodeset="instance('all-countries')/country">
                <xforms:label ref="name"/>
                <xforms:value ref="name"/>
            </xforms:itemset>
        </fr:autocomplete>
        <fr:autocomplete ref="instance('instance')" id="max-as-attribute-and-element"  max-results-displayed="5">
            <fr:max-results-displayed value="'7'"/>
            <xforms:itemset nodeset="instance('all-countries')/country">
                <xforms:label ref="name"/>
                <xforms:value ref="name"/>
            </xforms:itemset>
        </fr:autocomplete>
    </xhtml:body>
</xhtml:html>
