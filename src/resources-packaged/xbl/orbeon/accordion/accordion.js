YAHOO.namespace("xbl.fr");
YAHOO.xbl.fr.Accordion = {
    _instances: {},

    init: function(target) {
        var container = YAHOO.util.Dom.getAncestorByClassName(target, "xbl-fr-accordion");
        if (! YAHOO.xbl.fr.Accordion._instances[container.id]) {
            var dlElement = YAHOO.util.Dom.getElementsByClassName("xbl-fr-accordion-dl", null, container)[0];
            var selectedElement = YAHOO.util.Dom.getElementsByClassName("xbl-fr-accordion-selected", null, container)[0];

            // Create accordion menu
            new AccordionMenu.setting(dlElement.id, {
                dependent:  false,
                openedIds:  [],
                easeOut:    false,
                animation:  true,
                seconds:    0.2
            });

            // Remove the expand class we might have on the repeat template, so when we add a case to an iteration,
            // the case we add is always closed.
            YAHOO.util.Dom.getElementsByClassName("xforms-repeat-template", "dt", container, function(dt) {
                YAHOO.util.Dom.removeClass(dt, "a-m-t-expand");
            });
            YAHOO.util.Dom.getElementsByClassName("xforms-repeat-template", "dd", container, function(dd) {
                YAHOO.util.Dom.removeClass(dd, "a-m-d-expand");
            });

            function expandOrCollapse(dt) {
                var selected = ORBEON.xforms.Document.getValue(selectedElement.id) == "true";
                var accordionExpandOrCollapse = selected ? AccordionMenu.expandCase: AccordionMenu.collapseCase;
                // Ignore dts generated by xforms:repeat
                if (! YAHOO.util.Dom.hasClass(dt, "xforms-repeat-template") && ! YAHOO.util.Dom.hasClass(dt, "xforms-repeat-delimiter")) {
                    var isOpen = YAHOO.util.Dom.hasClass(dt, "a-m-t-expand");
                    if ((! isOpen && selected) || (isOpen && ! selected)) {
                        var dl = dt.parentNode;
                        var dd = YAHOO.util.Dom.getNextSibling(dt);
                        accordionExpandOrCollapse(dl, dt, dd);
                    }
                }
            }

            YAHOO.xbl.fr.Accordion._instances[container.id] = {
                toggleAll: function() {
                    YAHOO.util.Dom.getElementsByClassName("a-m-t", null, container, function(dt) {
                        expandOrCollapse(dt);
                    });
                },
                toggle: function(target) {
                    var dt = target.parentNode;
                    expandOrCollapse(dt);
                }
            };
        }
    },
    toggleAll: function(target) {
        var container = YAHOO.util.Dom.getAncestorByClassName(target, "xbl-fr-accordion");
        YAHOO.xbl.fr.Accordion._instances[container.id].toggleAll();
    },
    toggle: function(target) {
        var container = YAHOO.util.Dom.getAncestorByClassName(target, "xbl-fr-accordion");
        YAHOO.xbl.fr.Accordion._instances[container.id].toggle(target);
    }
};
