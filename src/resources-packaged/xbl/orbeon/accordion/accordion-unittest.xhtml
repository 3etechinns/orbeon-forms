<!--
    Copyright (C) 2009 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xhtml:html xmlns:xforms="http://www.w3.org/2002/xforms"
    xmlns:f="http://orbeon.org/oxf/xml/formatting"
    xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
    xmlns:widget="http://orbeon.org/oxf/xml/widget"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xhtml:head>
        <xhtml:title>Accordion</xhtml:title>
        <xforms:model>
            <xforms:instance id="instance">
                <instance>
                    <cost>123.45</cost>
                    <states>
                        <state>
                            <abbreviation>CA</abbreviation>
                            <name>California</name>
                            <population>36553215</population>
                        </state>
                        <state>
                            <abbreviation>GA</abbreviation>
                            <name>Georgia</name>
                            <population>9544750</population>
                        </state>
                        <state>
                            <abbreviation>HI</abbreviation>
                            <name>Hawaii</name>
                            <population>1283388</population>
                        </state>
                    </states>
                </instance>
            </xforms:instance>
            <xforms:instance id="new-state">
                <state>
                    <abbreviation>AK</abbreviation>
                    <name>Alaska</name>
                    <population>686293</population>
                </state>
            </xforms:instance>
        </xforms:model>
        <xhtml:link type="text/css" rel="stylesheet" href="/ops/yui/logger/assets/logger.css"/>
        <xhtml:script type="text/javascript" src="/ops/yui/logger/logger.js"/>
        <xhtml:script type="text/javascript" src="/ops/yui/yuitest/yuitest.js"/>
        <xhtml:script type="text/javascript">
            <![CDATA[
                YAHOO.tool.TestRunner.add(new YAHOO.tool.TestCase({

                    name: "Accordion",

                    getDl: function() {
                        return YAHOO.util.Dom.getElementsByClassName("xbl-fr-accordion-dl")[0];
                    },
                    getDts: function() {
                        return YAHOO.util.Dom.getElementsByClassName("a-m-t", null, this.getDl());
                    },
                    getDds: function() {
                        return YAHOO.util.Dom.getElementsByClassName("a-m-d", null, this.getDl());
                    },
                    checkIsOpened: function(position, opened) {
                        YAHOO.util.Assert.areEqual(YAHOO.util.Dom.hasClass(this.getDts()[position - 1], "a-m-t-expand"), opened);
                        YAHOO.util.Assert.areEqual(YAHOO.util.Dom.hasClass(this.getDds()[position - 1], "a-m-d-expand"), opened);
                    },
                    testInitiallyOpen: function() {
                        this.checkIsOpened(1, false);
                        this.checkIsOpened(2, true);
                        this.checkIsOpened(5, true);
                    },
                    testOpenAll: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("open-all"));
                        }, function() {
                            this.wait(function() {
                                this.checkIsOpened(1, true);
                                this.checkIsOpened(2, true);
                                this.checkIsOpened(5, true);
                            }, 500);
                        });
                    },
                    testCloseAll: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("close-all"));
                        }, function() {
                            this.wait(function() {
                                this.checkIsOpened(1, false);
                                this.checkIsOpened(2, false);
                                this.checkIsOpened(5, false);
                            }, 500);
                        });
                    },
                    testOpenThird: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("open-third"));
                        }, function() {
                            this.wait(function() {
                                this.checkIsOpened(3, true);
                            }, 500);
                        });
                    },
                    testCloseThird: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("close-third"));
                        }, function() {
                            this.wait(function() {
                                this.checkIsOpened(3, false);
                            }, 500);
                        });
                    },
                    testOpenStates: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("open-states"));
                        }, function() {
                            this.wait(function() {
                                this.checkIsOpened(5, true);
                            }, 500);
                        });
                    },
                    testCloseStates: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("close-states"));
                        }, function() {
                            this.wait(function() {
                                this.checkIsOpened(5, false);
                            }, 500);
                        });
                    },
                    testAddState: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.Assert.areEqual(8, this.getDts().length);
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("add-state"));
                        }, function() {
                            YAHOO.util.Assert.areEqual(9, this.getDts().length);
                        });
                    },
                    testRemoveState: function() {
                        ORBEON.util.Test.executeCausingAjaxRequest(this, function() {
                            YAHOO.util.UserAction.click(YAHOO.util.Dom.get("remove-state"));
                        }, function() {
                            YAHOO.util.Assert.areEqual(8, this.getDts().length);
                        });
                    }
                }));

                ORBEON.xforms.Events.orbeonLoadedEvent.subscribe(function() {
                    if (parent && parent.TestManager) {
                        parent.TestManager.load();
                    } else {
                        new YAHOO.tool.TestLogger();
                        YAHOO.tool.TestRunner.run();
                    }
                });
            ]]>
        </xhtml:script>
        <xhtml:style type="text/css">
            fieldset { float: left; margin-bottom: 1em; padding: 0 1em 0 0; }
            .xbl-fr-accordion { clear: both; }
        </xhtml:style>
    </xhtml:head>
    <xhtml:body>
        <xhtml:fieldset>
            <xhtml:legend>Accordion events</xhtml:legend>
            <xhtml:ol>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="open-all">
                        <xforms:label>Open all</xforms:label>
                        <xforms:dispatch ev:event="DOMActivate" target="my-accordion" name="fr-accordion-toggle-all">
                            <xxforms:context name="selected" select="true()"/>
                        </xforms:dispatch>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="close-all">
                        <xforms:label>Close all</xforms:label>
                        <xforms:dispatch ev:event="DOMActivate" target="my-accordion" name="fr-accordion-toggle-all">
                            <xxforms:context name="selected" select="false()"/>
                        </xforms:dispatch>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="open-third">
                        <xforms:label>Open third section (currency)</xforms:label>
                        <xforms:dispatch ev:event="DOMActivate" target="my-accordion" name="fr-accordion-toggle">
                            <xxforms:context name="case-id" select="'my-case-currency'"/>
                            <xxforms:context name="selected" select="true()"/>
                        </xforms:dispatch>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="close-third">
                        <xforms:label>Close third section (currency)</xforms:label>
                        <xforms:dispatch ev:event="DOMActivate" target="my-accordion" name="fr-accordion-toggle">
                            <xxforms:context name="case-id" select="'my-case-currency'"/>
                            <xxforms:context name="selected" select="false()"/>
                        </xforms:dispatch>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="open-states">
                        <xforms:label>Open states</xforms:label>
                        <xforms:dispatch ev:event="DOMActivate" target="my-accordion" name="fr-accordion-toggle">
                            <xxforms:context name="case-id" select="'my-case-repeat'"/>
                            <xxforms:context name="selected" select="true()"/>
                        </xforms:dispatch>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="close-states">
                        <xforms:label>Close states</xforms:label>
                        <xforms:dispatch ev:event="DOMActivate" target="my-accordion" name="fr-accordion-toggle">
                            <xxforms:context name="case-id" select="'my-case-repeat'"/>
                            <xxforms:context name="selected" select="false()"/>
                        </xforms:dispatch>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="add-state">
                        <xforms:label>Add state</xforms:label>
                        <xforms:insert ev:event="DOMActivate" context="instance('instance')/states" nodeset="state" at="last()" position="after" origin="instance('new-state')"/>
                    </xforms:trigger>
                </xhtml:li>
                <xhtml:li>
                    <xforms:trigger appearance="minimal" id="remove-state">
                        <xforms:label>Remove state</xforms:label>
                        <xforms:delete ev:event="DOMActivate" nodeset="instance('instance')/states/state[last()]"/>
                    </xforms:trigger>
                </xhtml:li>
            </xhtml:ol>
        </xhtml:fieldset>
        <fr:accordion class="fr-accordion-lnf" id="my-accordion">
            <fr:case>
                <fr:label>First section (lorem ipsum)</fr:label>
                <xhtml:div>
                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque eget nunc at felis pellentesque
                    consectetur malesuada mollis est. Sed ac dui a dui ultrices bibendum. In id nunc tortor, in porta
                    orci. Cras et eros odio, at fringilla neque. Mauris tincidunt pharetra tellus, eget molestie nisl
                    commodo vitae. Ut vel lectus nibh. Ut imperdiet ipsum interdum sem aliquet malesuada. Proin
                    tincidunt rhoncus dolor ut pulvinar. Pellentesque id libero massa. Fusce commodo volutpat felis.
                    Aliquam sit amet quam dolor, sit amet commodo sapien. Donec orci eros, sagittis id sodales in,
                    facilisis ac erat. Integer a odio sit amet dui pharetra posuere. Suspendisse placerat ornare
                    fermentum. Mauris eu nibh auctor velit imperdiet sagittis. Integer vel ornare tellus. Nulla
                    facilisi. Nullam eleifend dapibus enim a condimentum. Vestibulum porta lectus at enim iaculis
                    vehicula.
                </xhtml:div>
            </fr:case>
            <fr:case selected="true">
                <fr:label>Second section (XForms input)</fr:label>
                <xforms:input ref="cost">
                    <xforms:label>Cost</xforms:label>
                </xforms:input>
            </fr:case>
            <fr:case id="my-case-currency">
                <fr:label>Third section (currency)</fr:label>
                <fr:currency ref="cost" id="cost">
                    <xforms:label>Cost</xforms:label>
                </fr:currency>
            </fr:case>
            <fr:case>
                <fr:label>Datatable</fr:label>
                <fr:datatable id="my-datatable">
                    <xhtml:thead>
                        <xhtml:tr>
                            <xhtml:th fr:sortable="true" fr:resizeable="true">Abbreviation</xhtml:th>
                            <xhtml:th fr:sortable="true" fr:resizeable="true">Name</xhtml:th>
                            <xhtml:th fr:sortable="true" fr:resizeable="true">Population</xhtml:th>
                        </xhtml:tr>
                    </xhtml:thead>
                    <xhtml:tbody>
                        <xhtml:tr repeat-nodeset="states/state">
                            <xhtml:td>
                                <xforms:output ref="abbreviation"/>
                            </xhtml:td>
                            <xhtml:td>
                                <xforms:output ref="name"/>
                            </xhtml:td>
                            <xhtml:td>
                                <xforms:output ref="population"/>
                            </xhtml:td>
                        </xhtml:tr>
                    </xhtml:tbody>
                </fr:datatable>
            </fr:case>
            <xforms:repeat nodeset="states/state">
                <fr:case id="my-case-repeat" selected="true">
                    <fr:label value="name"/>
                    <xhtml:ul>
                        <xhtml:li>
                            Abbreviation:
                            <xforms:output value="abbreviation"/>
                        </xhtml:li>
                        <xhtml:li>
                            Population:
                            <xforms:output value="population"/>
                        </xhtml:li>
                    </xhtml:ul>
                </fr:case>
            </xforms:repeat>
        </fr:accordion>

    </xhtml:body>
</xhtml:html>
