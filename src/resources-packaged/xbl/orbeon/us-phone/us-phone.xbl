<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (C) 2009 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl">
    <!--
        Component to represent a US phone number split into area code and the rest of the number.

        TODO: Handle better optional vs. required scenarios for validation purposes.
     -->
    <xbl:binding id="fr-phone-binding" element="fr|us-phone">

        <!-- Orbeon Form Builder Component Metadata -->
        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">US Phone Number</display-name>
            <display-name lang="fr">Téléphone US</display-name>
            <icon lang="en">
                <small-icon>/apps/fr/style/images/silk/telephone.png</small-icon>
                <large-icon>/apps/fr/style/images/silk/telephone.png</large-icon>
            </icon>
            <datatype>xforms:nonNegativeInteger</datatype>
            <template>
                 <fr:us-phone>
                     <xforms:label ref=""/>
                     <xforms:hint ref=""/>
                     <xforms:help ref=""/>
                     <xforms:alert ref=""/>
                </fr:us-phone>
            </template>
        </metadata>

        <xbl:resources>
            <xbl:style>
                .xbl-fr-us-phone .fr-component-group .fr-us-phone-area input { width: 3em }
                .xbl-fr-us-phone .fr-component-group .fr-us-phone-local input { width: 8em }
            </xbl:style>
        </xbl:resources>
        <xbl:template>
            <!-- Local model -->
            <xforms:model id="number-model">
                <xforms:instance id="number-instance">
                    <number>
                        <area/>
                        <local/>
                    </number>
                </xforms:instance>
                <!-- Ensure the area code is on 3 digits -->
                <xforms:bind nodeset="area" type="xs:integer" constraint="for $i in xs:integer(.) return $i ge 100 and $i le 999"/>
                <!-- Ensure the local number contains only digits and spaces -->
                <xforms:bind nodeset="local" constraint="matches(normalize-space(), '^[0-9\s]*$') and string-length(translate(normalize-space(), ' ', '')) = 7"/>
                <!-- Make instance read-only when the form must be read-only -->
                <xforms:bind nodeset="." readonly="xxforms:instance('fr-parameters-instance')/mode = ('view', 'pdf', 'email')"/>
            </xforms:model>
            <!-- Local controls -->
            <xforms:group xbl:attr="ref bind">
                <xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>

                <xxforms:variable name="result" select="." as="node()?"/>

                <!-- React to update to bound node -->
                <xforms:group ref="$result" appearance="xxforms:internal">
                    <!-- Only set local values if the bound node is an xs:date -->
                    <xforms:action ev:event="xforms-value-changed xforms-enabled" if="$result castable as xs:positiveInteger">
                        <xforms:setvalue model="number-model" ref="area" value="substring($result, 1, 3)"/>
                        <xforms:setvalue model="number-model" ref="local" value="concat(substring($result, 4, 3), ' ', substring($result, 7, 4))"/>
                    </xforms:action>
                </xforms:group>

                <xforms:group model="number-model" class="fr-component-group">
                    (<xforms:input ref="area" class="fr-us-phone-area"><xforms:alert class="xforms-disabled"/></xforms:input>)
                    <xforms:input ref="local" class="fr-us-phone-local"><xforms:alert class="xforms-disabled"/></xforms:input>

                    <!-- React to update to local values -->
                    <xforms:action ev:event="xforms-value-changed">
                        <xxforms:variable name="phone-string" select="translate(concat(area, local), ' ', '')" as="xs:string"/>
                        <xxforms:variable name="is-valid-phone-string" as="xs:boolean"
                                          select="$phone-string castable as xs:positiveInteger and string-length($phone-string) = 10"/>
                        <xforms:setvalue if="$is-valid-phone-string" ref="$result" value="$phone-string"/>
                        <xforms:setvalue if="not($is-valid-phone-string)" ref="$result" value="if ($phone-string = '') then '' else 'INVALID_NUMBER'"/>
                    </xforms:action>

                    <!-- Stop propagation of all UI events -->
                    <xforms:action ev:event="xforms-enabled xforms-disabled xforms-readonly xforms-readwrite xforms-required xforms-optional xforms-valid xforms-invalid xforms-value-changed DOMActivate"
                                   ev:propagate="stop"/>
                </xforms:group>

            </xforms:group>
        </xbl:template>
    </xbl:binding>

</xbl:xbl>