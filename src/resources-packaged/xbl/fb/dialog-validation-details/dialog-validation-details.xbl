<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilder">

    <xbl:binding id="fb-dialog-validation-details" element="fb|dialog-validation-details" xxbl:mode="binding">
        <xbl:handlers>
            <!-- Handler to open dialog -->
            <xbl:handler event="fb-show-dialog" phase="target" defaultAction="cancel">
                <xf:setvalue iterate="*[not(*)]" ref="."/> <!-- Clear all local values -->
                <xf:setvalue ref="control-name" value="fbf:controlName(event('control-id'))"/>
                <xxf:show dialog="dialog"/>
            </xbl:handler>
            <!-- When the dialog opens, get type information from the form -->
            <xbl:handler ev:event="xxforms-dialog-open" ev:observer="dialog">
                <xf:var name="form" value="xxf:binding('fb-dialog-validation-details')"/>

                <!-- Clear default alert -->
                <xf:var name="default-alert" value="$i/default-alert"/>
                <xf:delete ref="$default-alert/node()"/>

                <xf:insert
                    context="$default-alert"
                    origin="fbf:readDefaultAlert($form, $i/control-name)"/>

                <!-- Clear validations -->
                <xf:var name="validations" value="$i/validations"/>
                <xf:delete ref="$validations/node()"/>

                <!-- Read required, datatype, and constraint validations -->
                <xf:insert
                    context="$validations"
                    origin="fbf:readValidationsAsXML($form, $i/control-name)"/>

                <!-- Force required if the datatype implies it -->
                <xf:setvalue
                    if="$validations/validation[@type = 'datatype']/required = 'true'"
                    ref="$validations/validation[@type = 'required']/required"
                    value="'true'"/>

                <!-- Read MIPs -->
                <xf:setvalue ref="$i/relevant"   value="fbf:getMipOrEmpty($form, $i/control-name, 'relevant')"/>
                <xf:setvalue ref="$i/readonly"   value="fbf:getMipOrEmpty($form, $i/control-name, 'readonly')"/>
                <xf:setvalue ref="$i/calculate"  value="fbf:getMipOrEmpty($form, $i/control-name, 'calculate')"/>
                <xf:setvalue ref="$i/default"    value="fbf:getMipOrEmpty($form, $i/control-name, 'default')"/>

                <!-- Read help -->
                <xf:setvalue ref="$i/help"  value="fbf:getControlHelpOrEmpty($i/control-name)"/>

                <!-- Remove all namespace nodes on the root element and insert those from the external xf:bind. This
                     allows scoping namespaces for XPath expressions validated with xxf:xpath2. -->
                <xf:delete ref="$i/namespace::node()"/>
                <xf:insert context="$i" origin="fbf:findBindByNameOrEmpty($form, $i/control-name)/namespace::node()"/>
            </xbl:handler>
            <!-- Save data upon close unless the sub-form is not valid -->
            <!-- NOTE: We used to have not(event('fb-save') = false()), but we prefer explicit now because we may get
                 an extra xxforms-dialog-close event sent by the client, in which case we don't want to do the processing -->
            <xbl:handler ev:event="xxforms-dialog-close" if="event('fb-save') and $i/@valid = 'true'" ev:observer="dialog">
                <xf:var name="form" value="xxf:binding('fb-dialog-validation-details')"/>
                <xf:action type="xpath">
                    (: Write alerts and constraints :)
                    fbf:writeAlertsAndValidationsAsXML($form, $i/control-name, $i/default-alert/alert, $i/validations/validation),
                    (: Write MIPs :)
                    for $mip in ('relevant', 'readonly', 'calculate', 'default') return
                        fbf:updateMip($form, $i/control-name, $mip, $i/*[name() = $mip]),
                    (: Write help :)
                    fbf:setControlHelp($i/control-name, $i/help)
                </xf:action>
            </xbl:handler>
        </xbl:handlers>
        <xbl:implementation>
            <xf:model id="model">

                <xf:instance id="i" xxf:exclude-result-prefixes="#all">
                    <local valid="true">

                        <control-name/>

                        <default-alert
                            global-default-alert-message=""
                            readonly-alert-message=""/>

                        <validations/>

                        <relevant/>
                        <readonly/>
                        <calculate/>
                        <default/>

                        <help/>

                        <save-trigger/>
                    </local>
                </xf:instance>

                <xf:var name="i" value="instance()"/>

                <xf:instance id="validation-constraint-template" xxf:exclude-result-prefixes="#all">
                    <validation id="" type="constraint" level="error" default-alert="true">
                        <constraint expression=""/>
                        <alert message=""/>
                    </validation>
                </xf:instance>

                <!-- Enable/disable trigger -->
                <xf:setvalue ev:event="xxforms-invalid" ev:observer="i" ref="@valid">false</xf:setvalue>
                <xf:setvalue ev:event="xxforms-valid"   ev:observer="i" ref="@valid">true</xf:setvalue>

                <xf:bind ref="default-alert">
                    <xf:bind
                        ref="alert/@global"
                        type="xs:boolean"/>
                    <xf:bind
                        ref="alert/@message"
                        readonly="../@global = true()"/>
                    <xf:bind
                        ref="@global-default-alert-message"
                        calculate="xxf:r('detail.labels.alert', '|fr-fr-resources|')"/><!-- FIXME: This uses FB's current language, not the edited form's -->
                    <xf:bind
                        id="default-alert"
                        ref="if (alert/@global = true())
                             then @global-default-alert-message
                             else alert/@message"/>
                    <!-- Keep copy of default alert, whether default for control or global default -->
                    <xf:bind
                        ref="@readonly-alert-message"
                        calculate="xxf:bind('default-alert')"/>
                </xf:bind>

                <xf:bind ref="validations/validation">
                    <xf:bind
                        ref="@type"
                        readonly="true()"/>

                    <xf:bind
                        ref="@level"
                        readonly="../@type = ('required', 'datatype')"/>

                    <xf:bind
                        ref="@default-alert"
                        type="xs:boolean"
                        readonly="false()"
                        calculate="if (../@type = 'constraint' and ../@level != 'error') then false() else ."/> <!-- no default alert for warning/info constraints -->

                    <!-- Keep required in sync -->
                    <xf:bind ref=".[@type = 'datatype']" name="datatype-validation">
                        <xf:bind
                            ref="required"
                            calculate="../../validation[@type = 'required']/required"/> <!-- calculate="$required-validation/required -->
                    </xf:bind>

                    <xf:bind
                        ref="constraint/@expression"
                        type="xxf:xpath2"
                        required="false()"/>
                </xf:bind>

                <xf:bind
                    ref="relevant | readonly | default | calculate"
                    type="xxf:xpath2"
                    required="false()"/>

                <xf:bind ref="save-trigger" readonly="instance()/@valid = 'false'"/>

            </xf:model>
        </xbl:implementation>
        <xbl:template>
            <!-- Bindings specified on control -->
            <!-- LATER: Use xxf:r(). Need to find solution for itemset resources. -->
            <xf:var name="resources"><xxf:sequence value=". treat as element()" xxbl:scope="outer" xbl:attr="model context ref=resources-ref"/></xf:var>

            <xxf:dialog id="dialog" level="modal" class="fb-dialog-validation-details">
                <xf:label ref="$resources/dialog-validation-details/label"/>

                <xf:var name="form" value="xxf:binding('fb-dialog-validation-details')"/>
                <xf:var name="model" value="$form/xh:head/xf:model[@id = 'fr-form-model'] treat as element()"/>

                <!-- Figure out schema prefix if any -->
                <xf:var name="schema"
                        value="$model/xs:schema[1]" as="element(xs:schema)?"/>
                <xf:var name="schema-namespace"
                        value="$schema/@targetNamespace" as="xs:string?"/>
                <xf:var name="schema-prefixes"
                        value="if (exists($schema)) then in-scope-prefixes($schema) else ()" as="xs:string*"/>
                <xf:var name="schema-namespaces"
                        value="if (exists($schema)) then for $p in in-scope-prefixes($schema) return namespace-uri-for-prefix($p, $schema) else ()" as="xs:string*"/>
                <xf:var name="schema-prefix"
                        value="if (exists($schema) and exists($schema-namespace)) then $schema-prefixes[index-of($schema-namespaces, $schema-namespace)[1]] else ()" as="xs:string?"/>

                <fr:tabbable>

                    <fr:tab id="validations-tab">
                        <fr:label ref="$resources/dialog-validation-details/tab-validations/label"/>
                        <xf:group appearance="xxf:internal" context="validations">

                            <fr:grid>
                                <xh:tr>
                                    <xh:td>
                                        <xf:textarea bind="default-alert">
                                            <xf:label ref="$resources/dialog-validation-details/default-alert/label"/>
                                            <xf:hint  ref="$resources/dialog-validation-details/default-hint/label"/>
                                        </xf:textarea>
                                    </xh:td>
                                    <xh:td>
                                        <xf:input ref="$i/default-alert/alert/@global">
                                            <xf:label ref="$resources/dialog-validation-details/use-global-alert/label"/>
                                            <!-- Dynamic bind depends on this value, we must do an explicit RRR -->
                                            <xf:action event="xforms-value-changed">
                                                <xf:rebuild/><xf:recalculate/><xf:revalidate/>
                                            </xf:action>
                                        </xf:input>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>

                            <fr:grid id="validations-grid" ref="validation" origin="instance('validation-constraint-template')" repeat="true" freeze="2">
                                <xh:tr>
                                    <xh:td>
                                        <xf:select1 ref="@type" appearance="full">
                                            <xf:label ref="$resources/dialog-validation-details/validation-type/label"/>
                                            <xf:item>
                                                <xf:label ref="$resources/dialog-validation-details/required/label"/>
                                                <xf:value>required</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label ref="$resources/dialog-validation-details/types/label"/>
                                                <xf:value>datatype</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label ref="$resources/dialog-validation-details/constraint/label"/>
                                                <xf:value>constraint</xf:value>
                                            </xf:item>
                                        </xf:select1>
                                    </xh:td>
                                    <xh:td>
                                        <xf:group>
                                            <xf:label ref="$resources/dialog-validation-details/validation-details/label"/>
                                            
                                            <xf:select1 ref=".[@type = 'required']/required" appearance="full">
                                                <xf:label ref="$resources/dialog-validation-details/required/label"/>
                                                <xf:hint  ref="$resources/dialog-validation-details/required/hint"/>
                                                <xf:itemset ref="$resources/dialog-validation-details/required//item">
                                                    <xf:label ref="label"/>
                                                    <xf:value ref="value"/>
                                                </xf:itemset>
                                            </xf:select1>

                                            <!-- Built-in type -->
                                            <xf:select1 ref=".[@type = 'datatype']/builtin-type">
                                                <xf:label ref="$resources/dialog-validation-details/builtin-type/label"/>
                                                <xf:hint  ref="$resources/dialog-validation-details/builtin-type/hint"/>
                                                <!-- Add placeholder if there is a schema type -->
                                                <xf:itemset ref=".[../schema-type != '']">
                                                    <xf:label ref="$resources/dialog-validation-details/builtin-type/use-schema-type"/>
                                                    <xf:value/>
                                                </xf:itemset>
                                                <xf:itemset ref="$resources/dialog-validation-details/builtin-type/choices//(choices | type)">
                                                    <xf:label ref="if (self::choices) then label else if (normalize-space(@label)) then concat(@label, ' (', ., ')') else ."/>
                                                    <xf:value ref="if (self::choices) then () else if (value) then value else ."/>
                                                </xf:itemset>
                                                <xf:setvalue ev:event="xforms-value-changed" if=". != ''" ref="../schema-type"/>
                                            </xf:select1>
                                            <!-- Schema type selection if applicable -->
                                            <xf:select1 ref=".[@type = 'datatype']/schema-type[exists($schema)]">
                                                <xf:label ref="$resources/dialog-validation-details/schema-type/label"/>
                                                <xf:hint  ref="$resources/dialog-validation-details/types/hint"/>
                                                <xf:item>
                                                    <xf:label ref="$resources/select/label"/>
                                                    <xf:value/>
                                                </xf:item>
                                                <!-- NOTE: Mark itemset as mutable as the schema may be updated -->
                                                <xf:itemset ref="$schema/xs:simpleType">
                                                    <xf:label ref="string-join(($schema-prefix, @name), ':')"/>
                                                    <xf:value ref="string-join(($schema-prefix, @name), ':')"/>
                                                </xf:itemset>
                                                <xf:setvalue ev:event="xforms-value-changed" if=". != ''" ref="../builtin-type"/>
                                            </xf:select1>

                                            <xf:textarea ref=".[@type = 'constraint']/constraint/@expression">
                                                <xf:label ref="$resources/dialog-validation-details/constraint/label"/>
                                                <xf:alert ref="$resources/dialog-validation-details/constraint/alert"/>
                                                <xf:hint  ref="$resources/dialog-validation-details/constraint/hint" appearance="minimal"/>
                                            </xf:textarea>
                                        </xf:group>

                                    </xh:td>
                                    <xh:td>
                                        <xf:select1 ref="@level">
                                            <xf:label ref="$resources/dialog-validation-details/level/label"/>
                                            <xf:item>
                                                <xf:label>Error</xf:label>
                                                <xf:value>error</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label>Warning</xf:label>
                                                <xf:value>warning</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label>Info</xf:label>
                                                <xf:value>info</xf:value>
                                            </xf:item>
                                        </xf:select1>
                                    </xh:td>
                                    <xh:td>
                                        <xf:textarea ref="if (@type = 'constraint' and @default-alert = false() or @level != 'error') then alert/@message else $i/default-alert/@readonly-alert-message">
                                            <xf:label ref="$resources/dialog-validation-details/alert/label"/>
                                        </xf:textarea>
                                        <xf:input ref=".[@type = 'constraint' and @level = 'error']/@default-alert">
                                            <xf:label ref="$resources/dialog-validation-details/use-default-alert/label"/>
                                        </xf:input>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                    </fr:tab>
                    <fr:tab id="formulas-tab">
                        <fr:label ref="$resources/dialog-validation-details/tab-formulas/label"/>
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <xf:textarea ref="calculate">
                                        <xf:label ref="$resources/dialog-validation-details/calculate/label"/>
                                        <xf:alert ref="$resources/dialog-validation-details/calculate/alert"/>
                                        <xf:hint  ref="$resources/dialog-validation-details/calculate/hint" appearance="minimal"/>
                                    </xf:textarea>
                                </xh:td>
                                <xh:td>
                                    <xf:textarea ref="default">
                                        <xf:label ref="$resources/dialog-validation-details/default/label"/>
                                        <xf:alert ref="$resources/dialog-validation-details/default/alert"/>
                                        <xf:hint  ref="$resources/dialog-validation-details/default/hint" appearance="minimal"/>
                                    </xf:textarea>
                                </xh:td>
                            </xh:tr>
                            <xh:tr>
                                <xh:td>
                                    <xf:textarea ref="relevant">
                                        <xf:label ref="$resources/dialog-validation-details/visibility/label"/>
                                        <xf:alert ref="$resources/dialog-validation-details/visibility/alert"/>
                                        <xf:hint  ref="$resources/dialog-validation-details/visibility/hint" appearance="minimal"/>
                                    </xf:textarea>
                                </xh:td>
                                <xh:td>
                                    <xf:textarea ref="readonly">
                                        <xf:label ref="$resources/dialog-validation-details/readonly/label"/>
                                        <xf:alert ref="$resources/dialog-validation-details/readonly/alert"/>
                                        <xf:hint  ref="$resources/dialog-validation-details/readonly/hint" appearance="minimal"/>
                                    </xf:textarea>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </fr:tab>
                    <fr:tab id="help-tab">
                        <fr:label ref="$resources/dialog-validation-details/tab-help/label"/>
                        <fr:grid id="help-grid">
                            <xh:tr>
                                <xh:td>
                                    <!-- Help message -->
                                    <xf:textarea ref="help">
                                        <xf:label ref="$resources/dialog-validation-details/help/label"/>
                                        <xf:hint  ref="$resources/dialog-validation-details/help/hint"/>
                                    </xf:textarea>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </fr:tab>
                </fr:tabbable>

                <xh:div class="fr-dialog-buttons">
                    <xf:trigger ref="save-trigger" appearance="xxf:primary">
                        <xf:label ref="$resources/apply/label"/>
                        <!-- Close and save upon DOMActivate -->
                        <xf:dispatch ev:event="DOMActivate" name="xxforms-dialog-close" targetid="dialog">
                            <xf:property name="fb-save" value="true()"/>
                        </xf:dispatch>
                    </xf:trigger>
                    <xf:output value="$resources/or/label"/>
                    <xf:trigger appearance="minimal">
                        <xf:label ref="$resources/cancel/label"/>
                        <!-- Close and cancel upon DOMActivate -->
                        <xf:dispatch ev:event="DOMActivate" name="xxforms-dialog-close" targetid="dialog">
                            <xf:property name="fb-save" value="false()"/>
                        </xf:dispatch>
                    </xf:trigger>
                </xh:div>
            </xxf:dialog>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>