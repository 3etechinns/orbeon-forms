<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         script-type="application/xhtml+xml">
    <xbl:binding id="fb-permissions" element="fb|permissions">
        <xbl:handlers>
            <xbl:handler event="fb-show-dialog" phase="target" defaultAction="cancel">
                <xxf:show dialog="dialog"/>
            </xbl:handler>
        </xbl:handlers>
        <xbl:resources>
            <xbl:style src="/xbl/fb/permissions/permissions.css"/>
        </xbl:resources>
        <xbl:implementation>
            <xf:model id="permissions-model">
                <xf:instance id="ui">
                    <ui valid="true">
                        <apply-trigger/>
                        <has-permissions/>
                        <readonly-checked>create read-update delete</readonly-checked>
                        <permissions>
                            <permission>
                                <operations/>
                            </permission>
                        </permissions>
                    </ui>
                </xf:instance>
                <!-- Maintain validity flag -->
                <xf:setvalue ev:event="xxforms-invalid" ev:observer="ui" ref="@valid">false</xf:setvalue>
                <xf:setvalue ev:event="xxforms-valid"   ev:observer="ui" ref="@valid">true</xf:setvalue>
                <xf:bind ref="instance('ui')">
                    <xf:bind ref="apply-trigger" readonly="instance()/@valid = 'false'"/>
                    <xf:bind ref="readonly-checked" readonly="true()"/>
                    <xf:bind ref="permissions/permission/role" constraint="normalize-space()" required="true()"/>
                </xf:bind>
                <xf:instance id="permission-template">
                    <permission>
                        <role/>
                        <operations/>
                    </permission>
                </xf:instance>
            </xf:model>
        </xbl:implementation>
        <xbl:template>
            <xf:group appearance="xxf:internal" id="container">

                <xf:var name="metadata" ><xxf:sequence value="." xxbl:scope="outer" xbl:attr="model context ref=metadata-ref"/></xf:var>
                <xf:var name="resources"><xxf:sequence value="." xxbl:scope="outer" xbl:attr="model context ref=resources-ref"/></xf:var>
                <xf:var name="ui"       value="instance('ui')"/>

                <!-- On dialog open, copy permissions from metadata into our UI representation -->
                <xf:action ev:event="xxforms-dialog-open" ev:observer="dialog">

                    <xf:var name="has-permissions" value="exists($metadata/permissions)"/>
                    <xf:setvalue ref="$ui/has-permissions" value="if ($has-permissions) then 'true' else ''"/>

                    <!-- Clean UI permissions -->
                    <xf:delete ref="$ui/permissions/*"/>
                    <xf:insert context="$ui/permissions" origin="instance('permission-template')"/>
                    <xf:delete ref="$ui/permissions/permission/role"/>

                    <!-- Populate UI permissions based metadata -->
                    <xf:action if="$has-permissions">
                        <!-- Add permissions attached to a role -->
                        <xf:var name="roles" value="('', distinct-values($metadata/permissions/permission/user-role/@any-of/tokenize(., '\s')))"/>
                        <xf:action iterate="$roles">
                            <!-- Current role -->
                            <xf:var name="role" value="."/>
                            <!-- Permissions for the current role -->
                            <xf:var name="permissions" value="$metadata/permissions/permission[empty(user-role[not(@any-of/tokenize(., '\s') = $role)])]"/>
                            <!-- Operations for the current role -->
                            <xf:var name="operations-raw" value="$permissions/@operations/tokenize(., '\s')"/>
                            <!-- Replace read and update by read-update -->
                            <xf:var name="operations-read-update" value="distinct-values(for $o in $operations-raw return if ($o = ('read', 'update')) then 'read-update' else $o)"/>
                            <!-- Insert new permission in UI, and populate it -->
                            <xf:insert if="$role != ''" context="$ui/permissions" ref="permission" origin="instance('permission-template')"/>
                            <xf:var name="new-permission" value="$ui/permissions/permission[last()]"/>
                            <!-- NOTE: Unescape internal spaces as the roles used in Liferay are user-facing labels that can contain spaces -->
                            <xf:setvalue if="$role != ''"  ref="$new-permission/role" value="replace($role, '%20', ' ')"/>
                            <xf:setvalue ref="$new-permission/operations" value="string-join($operations-read-update, ' ')"/>
                        </xf:action>
                    </xf:action>
                </xf:action>

                <!-- On save, copy permissions from UI representation to metadata -->
                <xf:action ev:event="DOMActivate" ev:observer="save-trigger">
                    <!-- Reset permissions element -->
                    <xf:delete ref="$metadata/permissions"/>
                    <xf:action if="$ui/has-permissions = 'true'">
                        <xf:insert context="$metadata" ref="*" origin="xxf:element('permissions')"/>
                        <!-- In UI replace "read-update" by "read update" -->
                        <xf:setvalue iterate="$ui/permissions/permission/operations" ref="." value="replace(., 'read-update', 'read update')"/>
                        <!-- In UI replace space in role by %20 -->
                        <xf:setvalue iterate="$ui/permissions/permission/role" ref="." value="replace(normalize-space(.), ' ', '%20')"/>
                        <!-- Add "anyone" permission -->
                        <xf:var name="anyone-operations" value="$ui/permissions/permission[1]/operations"/>
                        <xf:insert if="$anyone-operations != ''" context="$metadata/permissions" origin="xxf:element('permission', xxf:attribute('operations', $anyone-operations))"/>
                        <!-- For each permission, get the roles that can access it, and store in metadata as a separate permission element -->
                        <xf:var name="permissions" value="$ui/permissions/permission[position() > 1]"/>
                        <xf:action iterate="distinct-values($permissions/operations/tokenize(., '\s'))">
                            <xf:var name="operation" value="."/>
                            <xf:var name="roles" value="string-join(saxon:sort($permissions[tokenize(operations, '\s') = $operation]/role), ' ')"/>
                            <xf:insert context="$metadata/permissions" ref="*" origin="xxf:element('permission', (
                                xxf:attribute('operations', $operation),
                                xxf:element('user-role', xxf:attribute('any-of', $roles))))"/>
                        </xf:action>
                        <!-- Optional code to consolidate multiple permission for the same roles -->
                        <xf:var name="any-ofs" value="distinct-values($metadata/permissions/permission/user-role/@any-of)"/>
                        <xf:var name="operations" value="for $ao in $any-ofs return string-join($metadata/permissions/permission[user-role/@any-of = $ao]/@operations, ' ')"/>
                        <xf:delete ref="$metadata/permissions/permission[user-role]"/>
                        <xf:action iterate="1 to count($any-ofs)">
                            <xf:var name="i" value="position()"/>
                            <xf:insert context="$metadata/permissions" ref="*" origin="xxf:element('permission', (
                                xxf:attribute('operations', saxon:item-at($operations, $i)),
                                xxf:element('user-role', xxf:attribute('any-of', saxon:item-at($any-ofs, $i)))))"/>
                        </xf:action>
                    </xf:action>
                </xf:action>

                <!-- Hide dialog -->
                <xf:action ev:event="DOMActivate" ev:observer="save-trigger cancel-trigger">
                    <xxf:hide dialog="dialog"/>
                </xf:action>

                <xxf:dialog id="dialog" class="fb-permissions-dialog">
                    <xf:label ref="$resources/dialog-permissions/label"/>
                    <!-- Choose mode -->
                    <xf:select ref="$ui/has-permissions" appearance="full">
                        <xf:item>
                            <xf:label ref="$resources/dialog-permissions/role-based-permissions"/>
                            <xf:value>true</xf:value>
                        </xf:item>
                        <xf:action ev:event="xforms-value-changed" if=". = 'true' and empty($ui/permissions/permission)">
                            <xf:insert context="$ui/permissions/permission" origin="instance('permission-template')"/>
                        </xf:action>
                    </xf:select>
                    <xf:group ref=".[$ui/has-permissions = 'true']">
                        <!-- Edit roles -->
                        <xh:table class="fb-permissions-repeat">
                            <xh:tr>
                                <xh:th><xf:output value="$resources/dialog-permissions/role"/></xh:th>
                                <xh:th colspan="3"><xf:output value="$resources/dialog-permissions/operations"/></xh:th>
                            </xh:tr>
                            <xf:var name="anyone-operations" value="tokenize($ui/permissions/permission[1]/operations, '\s')"/>
                            <xf:repeat ref="$ui/permissions/permission">
                                <xf:var name="is-first" value="position() = 1"/>
                                <xh:tr>
                                    <xh:td class="fb-role">
                                        <!-- Role name or "anyone" -->
                                        <xf:group ref=".[$is-first]">
                                            <xf:output value="$resources/dialog-permissions/anyone"/>
                                        </xf:group>
                                        <xf:group ref=".[not($is-first)]">
                                            <xf:input ref="role" incremental="true"/>
                                        </xf:group>
                                    </xh:td>
                                    <xh:td>
                                        <!-- Checkboxes for operations -->
                                        <xf:select ref="if (not($is-first) and $anyone-operations = 'create') then $ui/readonly-checked else operations" appearance="full">
                                            <xf:item>
                                                <xf:label ref="$resources/dialog-permissions/create"/>
                                                <xf:value>create</xf:value>
                                            </xf:item>
                                        </xf:select>
                                    </xh:td>
                                    <xh:td>
                                        <xf:select ref="if (not($is-first) and $anyone-operations = 'read-update') then $ui/readonly-checked else operations" appearance="full">
                                            <xf:item>
                                                <xf:label ref="$resources/dialog-permissions/read-update"/>
                                                <xf:value>read-update</xf:value>
                                            </xf:item>
                                        </xf:select>
                                    </xh:td>
                                    <xh:td>
                                        <xf:select ref="if (not($is-first) and $anyone-operations = 'delete') then $ui/readonly-checked else operations" appearance="full">
                                            <xf:item>
                                                <xf:label ref="$resources/dialog-permissions/delete"/>
                                                <xf:value>delete</xf:value>
                                            </xf:item>
                                        </xf:select>
                                    </xh:td>
                                    <xh:td>
                                        <!-- Remove -->
                                        <xf:trigger appearance="minimal" ref=".[not($is-first)]">
                                            <xf:label><xh:i class="icon-minus-sign"/></xf:label>
                                            <xf:delete ev:event="DOMActivate" ref="."/>
                                        </xf:trigger>
                                        <xf:group ref=".[$is-first]"><xh:i class="icon-minus-sign disabled"/></xf:group>
                                    </xh:td>
                                </xh:tr>
                            </xf:repeat>
                            <xh:tr>
                                <xh:td colspan="4"/>
                                <xh:td>
                                    <!-- Add -->
                                    <xf:trigger appearance="minimal">
                                        <xf:label><xh:i class="icon-plus-sign"/></xf:label>
                                        <xf:insert ev:event="DOMActivate" ref="$ui/permissions/permission" origin="instance('permission-template')"/>
                                    </xf:trigger>
                                </xh:td>
                            </xh:tr>
                        </xh:table>
                    </xf:group>

                    <!-- Buttons -->
                    <xh:div class="fr-dialog-buttons">
                        <xf:group appearance="xxf:internal" id="triggers">
                            <xh:span>
                                <xf:trigger ref="$ui/apply-trigger" id="save-trigger" appearance="xxf:primary">
                                    <xf:label ref="$resources/apply/label"/>
                                </xf:trigger>
                                <xf:output value="$resources/or/label"/>
                                <xf:trigger appearance="minimal" id="cancel-trigger">
                                    <xf:label ref="$resources/cancel/label"/>
                                </xf:trigger>
                            </xh:span>
                        </xf:group>
                    </xh:div>
                </xxf:dialog>
            </xf:group>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>