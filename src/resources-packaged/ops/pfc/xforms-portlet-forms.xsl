<!--
    Copyright (C) 2004 Orbeon, Inc.
  
    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.
  
    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.
  
    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xhtml="http://www.w3.org/1999/xhtml"
    xmlns:portlet="http://orbeon.org/oxf/xml/portlet"
    xmlns:decoder="java:java.net.URLDecoder"
    xmlns:f="http://orbeon.org/oxf/xml/formatting">

    <xsl:import href="oxf:/oxf/xslt/utils/copy-modes.xsl"/>

    <!-- Inputs -->
    <xsl:variable name="xhtml-data-hidden" select="/*" as="element()"/>

    <!-- All the forms generated by portlets -->
    <xsl:variable name="forms" select="$xhtml-data-hidden//(xhtml:form|form)[@portlet:is-portlet-form = 'true']" as="element()*"/>
    <xsl:variable name="forms-ids" select="for $i in $forms return generate-id($i)" as="xs:string*"/>

    <!-- Main template -->
    <xsl:template match="/">
        <xsl:apply-templates select="$xhtml-data-hidden"/>
    </xsl:template>

    <!-- Annotate portlet forms with hidden portal data if needed -->
    <xsl:template match="*[generate-id() = $forms-ids]">
        <xsl:copy>
            <xsl:copy-of select="@*"/>

            <!-- Transform URL query parameters into hidden fields so as not to pollute the portal URL -->
            <xsl:if test="@action and substring-after(@action, '?') != '' ">
                <xsl:attribute name="action" select="substring-before(@action, '?')"/>

                <xsl:variable name="params" select="tokenize(substring-after(@action, '?'), '&amp;')" as="xs:string*"/>
                <xsl:for-each select="$params">
                    <xhtml:input type="hidden" name="{substring-before(., '=')}" value="{decoder:decode(substring-after(., '='), 'utf-8')}"/>
                </xsl:for-each>
            </xsl:if>

            <!-- Copy content of the form -->
            <xsl:apply-templates select="node()" mode="rewrite-form">
                <xsl:with-param name="portlet-id" select="@portlet:form-portlet-id" tunnel="yes"/>
            </xsl:apply-templates>
        </xsl:copy>
    </xsl:template>

    <!-- Portlet form controls names are transformed here -->
    <xsl:template match="input|xhtml:input" mode="rewrite-form">
        <xsl:param name="portlet-id" tunnel="yes"/>
        <xsl:copy>
            <xsl:copy-of select="@*"/>
            <!-- Transform specially names for submit -->
            <xsl:if test="@name">
                <xsl:attribute name="name" select="concat('$portlet$', if (@type='submit' or @type='image') then 'a' else 'p', $portlet-id, '.', @name)"/>
            </xsl:if>
            <!-- There may be content in the body of an input element! -->
            <xsl:apply-templates/>
        </xsl:copy>
    </xsl:template>

    <!-- Portlet form controls names are transformed here -->
    <xsl:template match="select|xhtml:select|textarea|xhtml:textarea" mode="rewrite-form">
        <xsl:param name="portlet-id" tunnel="yes"/>
        <xsl:copy>
            <xsl:copy-of select="@*"/>
            <xsl:if test="@name">
                <xsl:attribute name="name" select="concat('$portlet$p', $portlet-id, '.', @name)"/>
            </xsl:if>
            <xsl:apply-templates/>
        </xsl:copy>
    </xsl:template>

</xsl:stylesheet>
